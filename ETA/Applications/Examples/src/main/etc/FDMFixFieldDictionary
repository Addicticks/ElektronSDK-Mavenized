!
! *** Generated by FixSpec Central at 11/12/2014 02:25:53 pm ***
!
!  This file contains information proprietary to
!  Reuters Limited and may not be reproduced, disclosed
!  or used in whole or in part without the express written
!  permission of Reuters Limited.
!
!  This appendix contains a complete list of acronyms used in Field
!  Lists and, for each acronym, gives:
!
!     * DDE Acronym
!     * associated FID
!     * ripples to FID (by acronym)
!     * Marketfeed field type
!     * Marketfeed maximum field length
!     * RWF field type (RWF_DT_)
!     * RWF maximum field length (for caching)
!
!ACRONYM                  DDE ACRONYM                 FID RIPPLES TO   FIELD TYPE     LENGTH  RWF TYPE       RWF LEN
!-------                  -----------                 --- ----------   ----------     ------  --------       -------
!
Account                   "Account"                     1 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Account&nbsp;&nbsp;
!
AdvId                     "AdvId"                       2 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Unique identifier of advertisement message.
!
AdvRefID                  "AdvRefID"                    3 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Required for Cancel and Replace AdvTransType messages Reference identifier used with CANCEL and R
! EPLACE transaction types.
!
AdvSide                   "AdvSide"                     4 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Broker's side of advertised trade
!
AdvTransType              "AdvTransType"                5 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Identifies advertisement message transaction type
!
AvgPx                     "AvgPx"                       6 NULL         PRICE              17  REAL               5
!
! Average price.
!
!
!	Conditionally required if specified on the Execution Report
!	&nbsp;For FXSW
! APS the only supportive value is 0.
!
!
BeginString               "BeginString"                 8 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Always unencrypted, must be first field in message. Identifies beginning of new message and proto
! col version.
!
CheckSum                  "CheckSum"                   10 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! (Always unencrypted, always last field in message) Three byte, simple checksum (see Volume 2: "Ch
! ecksum Calculation" for description). ALWAYS LAST FIELD IN MESSAGE; i.e. serves, with the trai
! ling , as the end-of-message delimiter. Always defined as three characters. (Always unencrypte
! d)
!
ClOrdID                   "ClOrdID"                    11 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Unique identifier assigned by the FX trading client.
!
CumQty                    "CumQty"                     14 NULL         INTEGER            15  UINT              15
!
! Currently executed amount for the overall order, specified in terms of Currency, Tag 15.
!
!
!	Co
! nditionally required if specified on the Execution Report
!	For FXSWAPS the only supportive va
! lue is 0.
!
!
Currency                  "Currency"                   15 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Identifies the currency used to specify quantity, also known as the “dealt” currency.
!For in
! stance if Symbol = USD/JPY and Currency = JPY then OrderQty should&nbsp; be specified as an am
! ount of Japanese Yen. If omitted then the dealt currency is assumed to be the base currency (C
! CY1) of the CCY1/CCY2 Symbol specified.
!
ExecID                    "ExecID"                     17 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Unique value assigned to this execution. Assigned by FXT
!
ExecInst                  "ExecInst"                   18 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Instructions for order handling on exchange trading floor.
!
!
!	If more than one instruction is 
! applicable to an order, this field can&nbsp; contain multiple instructions separated by space.
! 
!
!
!BS:
! All-or-None; all orders are AON even if ExecInst is not provided th
! en the order will still be defaulted to AON
!
ExecRefID                 "ExecRefID"                  19 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Required for Trade Cancel and Trade Correct ExecType messages
!
HandlInst                 "HandlInst"                  21 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Instructions for order handling.
!
SecurityIDSource          "SecurityIDSource"           22 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Identifies class or source of the SecurityID (48) value. Required if SecurityID is specified.
!
!
! 
!	100+ are reserved for private security identifications
!
!
IOIID                     "IOIID"                      23 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Unique identifier of IOI message.&nbsp; Identifier must be unique for up to 7 days for the origin
! ator of the FIX message.&nbsp;
!Values: 0-9, A-Z.
!
IOIQltyInd                "IOIQltyInd"                 25 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Relative quality of indication
!
IOIRefID                  "IOIRefID"                   26 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Required for Cancel and Replace IOITransType messages Reference identifier used with CANCEL and R
! EPLACE, transaction types.
!
IOIQty                    "IOIQty"                     27 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! The value zero is used if NoLegs repeating group is used Quantity (e.g. number of shares) in nume
! ric form or relative size.
!
IOITransType              "IOITransType"               28 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Identifies IOI message transaction type
!
LastCapacity              "LastCapacity"               29 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Broker capacity in order execution
!
LastMkt                   "LastMkt"                    30 NULL         ALPHANUMERIC       15  ASCII_STRING        15
!
! Market of execution for last fill, or an indication of the market where an order was routed
!
LastPx                    "LastPx"                     31 NULL         PRICE              17  REAL               5
!
! Rate for the execution. Should represent the “all-in” (LastSpotRate + LastForwardPoints) rate
!  for F/X orders. ) For spot-only executions will be the same as the LastSpotRate. For swaps th
! is is the all-in price for the first leg of the execution.
!
!
!	Conditionally required if spe
! cified on the Execution Report
!	&nbsp;For FXSWAPS the only supportive value is 0.
!
!
LastQty                   "LastQty"                    32 NULL         INTEGER            15  UINT              15
!
! P { margin-bottom: 0.21cm; }
!
!
!
!Quantity traded on this fill in
!terms of Currency (Tag 15). 
! For FX-Swap orders the
! quantity of the
!second leg is the same for LastQty, although LastQty
! Contra2 quantity
!of counter-currency) will be different.
!
!
!	Conditionally required if
!	sp
! ecified on the Execution Report
!
!	
!	 For FXSWAPS the only
!	supportive value is 0.
!
!
MsgSeqNum                 "MsgSeqNum"                  34 NULL         INTEGER            15  UINT               6
!
! (Can be embedded within encrypted data section.) Integer message sequence number.
!
MsgType                   "MsgType"                    35 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! (Always unencrypted, must be third field in message) Defines message type. ALWAYS THIRD FIELD IN 
! MESSAGE. (Always unencrypted). Note: A "U" as the first character in the MsgType field (i.e. U
! 1, U2, etc) indicates that the message format is privately defined between the sender and rece
! iver.
!
OrderID             "OrderID"              37 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Unique value assigned to the order. Assigned by FXT
!
OrderQty                  "OrderQty"                   38 NULL         INTEGER            15  UINT              15
!
! Amount of currency (Tag 15) that was requested to be executed. The OrderQty for the second leg of
!  an FXSWAPS is assumed to be the same as that of the first leg,although the side will be rever
! sed.
!
!
!	For FXSWAPS the only supportive value is 0.
!
!
OrdStatus                 "OrdStatus"                  39 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Identifies current status of order
!
!
!	Values 99, 100, and 101 are added by Thomson Reuters.
!
!
OrdType                   "OrdType"                    40 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Type of the order.
!
!The order type should be the same as on original order&nbsp;
!
OrigClOrdID               "OrigClOrdID"                41 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! ClOrdID (11) of the previous order (NOT the initial order of the day) as assigned by
!the institu
! tion, used to identify the previous order in cancel and cancel/replace requests.
!
PossDupFlag               "PossDupFlag"                43 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Always required for retransmitted messages, whether prompted by the sending system or as the resu
! lt of a resend request. (Can be embedded within encrypted data section.) Indicates possible re
! transmission of message with this sequence number
!
Price                     "Price"                      44 NULL         PRICE              17  REAL               5
!
! Price per unit of quantity
!
!
!	For FXSWAPS represents the differential between the near leg's b
! id/offer and the far leg's bid/offer.Expressed in decimal form.
!	For example, 61.99 points is
!  expressed and sent as 0.006199.
!
!
RefSeqNum                 "RefSeqNum "                 45 NULL         INTEGER            15  UINT               6
!
! Sequence number of rejected message.
!
SecurityID                "SecurityID"                 48 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Takes precedence in identifying security to counterparty over SecurityAltID block.
!
!
!	Requires
!  SecurityIDSource if specified.
!
!
SenderCompID              "SenderCompID"               49 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! (Always unencrypted) Assigned value used to identify firm sending message.
!
SenderSubID               "SenderSubID"                50 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! (Can be embedded within encrypted data section.) Assigned value used to identify specific message
!  originator (desk, trader, etc.)
!
SendingTime               "SendingTime"                52 NULL         DATE                5  DATE                 5
!
! (Can be embedded within encrypted data section.) Time of message transmission (always expressed i
! n UTC (Universal Time Coordinated, also known as "GMT")
!
Quantity                  "Quantity"                   53 NULL         INTEGER            15  UINT              15
!
! Overall/total quantity
!
!
!	&nbsp;For FXSWAPS the only supportive value is 0.
!
!
Side                      "Side"                       54 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Side of the trade from the perspective of the submitter of the original New Order.
!The side refl
! ects whether or not the originator of the order bought or sold the dealt” currency, specifie
! d in Tag 15, Currency. For OrdType = FX – Swap to the side specified for Tag 54 is assumed t
! o be reversed in the second leg.
!
Symbol                    "Symbol"                     55 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Currency pair for which the execution is being performed. This field is encoded
!according to sta
! ndard FIX FX standards with additional FXall requirements. See Section 3.6.1 for description o
! f symbol format.
!
TargetCompID              "TargetCompID"               56 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! (Always unencrypted) Assigned value used to identify receiving firm.
!
TargetSubID               "TargetSubID"                57 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! "ADMIN" reserved for administrative messages not intended for a specific user. (Can be embedded w
! ithin encrypted data section.) Assigned value used to identify specific individual or unit int
! ended to receive message. "ADMIN" reserved for administrative messages not intended for a spec
! ific user.
!
Text                      "Text"                       58 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Explanatory text optionally used for ExecType = 8 (Rejected)
!
TimeInForce               "TimeInForce"                59 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Specifies how long the order remains in effect. Absence of this field is interpreted as DAY.
!
TransactTime              "TransactTime"               60 NULL         DATE                5  DATETIME                 5
!
! Timestamp when the business transaction represented by the message occurred.
!
ValidUntilTime            "ValidUntilTime"             62 NULL         DATE                5  DATE                 5
!
! Indicates expiration time of indication message (always expressed in UTC (Universal Time Coordina
! ted, also known as "GMT")
!
SettlType                 "SettlType"                  63 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Instrument’s Settlement Period; always expressed as a Tenor.
!
!
!	
!	Filters the returned inst
! rument list to only include those instruments which match the supplied tenor
!	
!	
!	One of 3 
! tags - Tenor [SettlType -Tag 63], Value Date [SettlDate - Tag 64], or Fixing Date [MaturityDat
! e -Tag 541] requires for FXNDF and FXFWDS
!	
!	
!	If both, Tenor [SettlType -Tag 63] and Value
!  Date [SettlDate - Tag 64] are presented, then SettlDate overrides this field.
!	
!	
!	If both
! , Tenor [SettlType -Tag 63] and Fixing Date [MaturityDate -Tag 541], are presented, then Matur
! ityDate -Tag 541 overrides this field.
!	
!	
!	If all 3 tags – Tenor [SettlType -Tag 63], Va
! lue Date [SettlDate - Tag 64], and Fixing Date [MaturityDate -Tag 541] are presented, then Mat
! urityDate -Tag 541 overrides this field.
!	
!	
!	This tag is not required for FXSWAPS
!	
!
!
!
! The use of this field does not conform to standard FIX. This field is used to better&nbsp; sup
! port FX trading.
!
SettDate                  "SettDate"                   64 NULL         DATE               11  DATE                11
!
! Contains the exact settlement or “value date” for the first (or only) leg of an
!execution. T
! his is not a tenor. The settlement date is specified as a string in
!YYYYMMDD format and repre
! sents either a spot or forward transaction.
!
!
!	Required for FXFWDS and FXNDF
!
!
!The use o
! f this field does not conform to standard FIX. This field is used to better support FX trading
! .
!
SymbolSfx                 "SymbolSfx"                  65 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Used in Fixed Income with a value of "WI" to indicate "When Issued" for a security to be reissued
!  under an old CUSIP or ISIN or with a value of "CD" to indicate a EUCP with lump-sum interest 
! rather than discount price. Additional information about the security (e.g. preferred, warrant
! s, etc.). Note also see SecurityType (67). Valid values defined in the NYSE Stock and bond Sym
! bol Directory and in the AMEX Fitch Directory.Fixed Income use:WI = "When Issued" for a securi
! ty to be reissued under an old CUSIP or ISINCD = a EUCP with lump-sum interest rather than dis
! count price
!
AllocID                   "AllocID"                    70 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Unique identifier for allocation message
!
!
!	Not required if all the allocations are part of th
! e same message
!
!
TradeDate                 "TradeDate"                  75 NULL         DATE               11  DATE                11
!
! Indicates date of trade referenced in this message in YYYYMMDD format. Absence of this field indi
! cates current day (expressed in local time at place of trade).
!
NoAllocs                  "NoAllocs"                   78 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Number of repeating groups for pre - allocation trade.
!
!
!	Tags marked as ‘C’ [conditional]
!  in PreAllocGrp are required if the number of NoAllocs ≥ 1
!	Tags marked as ‘CR’ are con
! ditionally required within PreAllocGrp if the number of NoAllocs ≥ 1
!	PreAllocGrp is not re
! quired for FXSWAPS with pre-allocations. Refer to the LegPreAllocGrp below
!
!
AllocAccount              "AllocAccount"               79 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Specify the Allocation Account name /mnemonic/
!
!
!	Must be first field in repeating group.
!
!
AllocQty                  "AllocQty"                   80 NULL         INTEGER            15  UINT              15
!
! Specify the quantity to be allocated to the underlying account.
!
Signature                 "Signature"                  89 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Note: Not to be included within SecureData field Electronic signature
!
SignatureLength           "SignatureLength"            93 NULL         INTEGER            15  UINT               6
!
! Required when trailer contains signature. Note: Not to be included within SecureData field Number
!  of bytes in signature field
!
PossResend                "PossResend"                 97 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Required when message may be duplicate of another message sent under a different sequence number.
!  (Can be embedded within encrypted data section.) Indicates that message may contain informati
! on that has been sent under another sequence number.
!
StopPrice                "Stop Price"                 99 NULL         PRICE              17  REAL               5
!
! ALGO Only: Required when OrdType (40) = Stop (3) or StopLimit (4). The Stop price at which to tri
! gger the order.
!
ExDestination             "ExDestination"             100 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Execution venue where order intent to be executed*.
!See Appendix TRA-1 for additional details an
! d supportive values.
!
CxlRejReason              "CxlRejReason"              102 NULL         INTEGER            15  UINT               6
!
! &nbsp;
!
OrdRejReason              "OrdRejReason"              103 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Code to identify reason for order rejection.
!
!MATCHING Only:
!Tag 103 is not part of the Exec R
! eport
!
IOIQualifier              "IOIQualifier"              104 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Required if NoIOIQualifiers > 0 Code to qualify IOI use. (see Volume : "Glossary" for value defin
! itions)
!
Issuer                    "Issuer"                    106 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Name of security issuer (e.g. International Business Machines, GNMA).
!
SecurityDesc              "SecurityDesc"              107 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Can be used to provide an optional textual description for a financial instrument. Autex will pas
! s p to 250 character are passed to the target (anything longer is truncated).
!
MinQty                    "MinQty"                    110 NULL         INTEGER            15  UINT              15
!
! Minimum quantity of an order to be executed.The value will only be specified when the MarketDepth
!  on the market data request was set to FullBook.
!
OnBehalfOfCompId          "OnBehalfOfCompId"          115 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! If 12002="COMPID", sender to use for query
!
OnBehalfOfSubID           "OnBehalfOfSubID"           116 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! If 12002="SUBID", sender to use for query
!
QuoteID                   "QuoteID"                   117 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! BS:
!Quote ID; quoted order only
!
SettlCurrency             "SettlCurrency"             120 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Currency code of settlement denomination. Required for NDF Currency Pairs and must be presented i
! n the terms of deliverable currency in the pair.
!
OrigSendingTime           "OrigSendingTime"           122 NULL         DATE                5  DATE                 5
!
! Required for message resent as a result of a ResendRequest. If data is not available set to same 
! value as SendingTime (Can be embedded within encrypted data section.) Original time of message
!  transmission (always expressed in UTC (Universal Time Coordinated, also known as "GMT") when 
! transmitting orders as the result of a resend request.
!
ExpireTime                "ExpireTime"                126 NULL         DATE                5  DATE                 5
!
! Required for RFQ’s. Contains a UTC Date &amp; Time; special value of 0 indicates a single tick 
! rather than a stream of prices
!
DeliverToCompID           "DeliverToCompID"           128 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Trading partner company ID used when sending messages via a third party (Can be embedded within e
! ncrypted data section.) Assigned value used to identify the firm targeted to receive the messa
! ge if the message is delivered by a third party i.e. the third party firm identifier would be 
! delivered in the TargetCompID (56) field and the ultimate receiver firm ID in this field.
!
DeliverToSubID            "DeliverToSubID"            129 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Trading partner SubID used when delivering messages via a third party. (Can be embedded within en
! crypted data section.) Assigned value used to identify specific message recipient (i.e. trader
! ) if the message is delivered by a third party
!
IOINaturalFlag            "IOINaturalFlag"            130 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Indicates that IOI is the result of an existing agency order or a facilitation position resulting
!  from an agency order, not from principal trading or order solicitation activity.
!
QuoteReqID                "QuoteReqID"                131 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! &nbsp;Unique identifier for quote request
!
BidSize                   "BidSize"                   134 NULL         INTEGER            15  UINT              15
!
! BankStream only - Cumulative TOB offer size – TOB sessions only.
!The use of this field does no
! t conform to standard FIX. This field is used to better support FX trading.
!
OfferSize                 "OfferSize"                 135 NULL         INTEGER            15  UINT              15
!
! BankStream only - Cumulative TOB offer size – TOB sessions only .
!The use of this field does n
! ot conform to standard FIX. This field is used to better support FX trading.
!
SenderLocationID          "SenderLocationID"          142 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Sender's LocationID (i.e. geographic location and/or desk) (Can be embedded within encrypted data
!  section.) Assigned value used to identify specific message originator's location (i.e. geogra
! phic location and/or desk, trader)
!
TargetLocationID          "TargetLocationID"          143 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Trading partner LocationID (i.e. geographic location and/or desk) (Can be embedded within encrypt
! ed data section.) Assigned value used to identify specific message destination's location (i.e
! . geographic location and/or desk, trader)
!
OnBehalfOfLocationID      "OnBehalfOfLocationID"      144 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Trading partner LocationID (i.e. geographic location and/or desk) used when delivering messages v
! ia a third party. (Can be embedded within encrypted data section.) Assigned value used to iden
! tify specific message originator's location (i.e. geographic location and/or desk, trader) if 
! the message was delivered by a third party
!
DeliverToLocationID       "DeliverToLocationID"       145 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Trading partner LocationID (i.e. geographic location and/or desk) used when delivering messages v
! ia a third party. (Can be embedded within encrypted data section.) Assigned value used to iden
! tify specific message recipient's location (i.e. geographic location and/or desk, trader) if t
! he message was delivered by a third party
!
NoRelatedSym              "NoRelatedSym"              146 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Number of related symbols (instruments) in Request
!
URLLink                   "URLLink"                   149 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! A URL (Uniform Resource Locator) link to additional information (i.e. http://www.XYZ.com/research
! .html) A URI (Uniform Resource Identifier) or URL (Uniform Resource Locator) link to additiona
! l information (i.e. )
!
ExecType                  "ExecType"                  150 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Describes the specific ExecutionRpt (i.e. Pending Cancel) while OrdStatus (39) will always identi
! fy the current order status
!
LeavesQty                 "LeavesQty"                 151 NULL         INTEGER            15  UINT              15
!
! Amount of the overall order left for further execution, specified in terms of Currency, Tag 15.
!
! 
!
!	
!	For FXSWAPS the only supportive value is 0. Refer to the LegLeaveQty (Tag 30275) for t
! he last quantities of the near/far legs.
!	
!
!
!MIDBOOK: 
!
!If the OrdStatus is Pending Canc
! el, LeavesQty represents the amount still left open for possible execution. If the OrdStatus i
! s Cancelled, DoneForTheDay, Expired, Calculated, or Rejected (in which case the order is no lo
! nger active) then LeavesQty should be 0. Otherwise LeavesQty = OrderQty - CumQty.
!
CashOrderQty              "CashOrderQty"              152 NULL         INTEGER            15  UINT              15
!
! One of CashOrderQty, OrderQty, or (for CIV only) OrderPercent is required. Note that unless other
! wise specified, only one of CashOrderQty, OrderQty, or OrderPercent should be specified. Speci
! fies the approximate "monetary quantity" for the order. Broker is responsible for converting a
! nd calculating OrderQty in tradeable units (e.g. shares) for subsequent messages. Specifies th
! e approximate order quantity desired in total monetary units vs. as tradeable units (e.g. numb
! er of shares). The broker or fund manager (for CIV orders) would be responsible for converting
!  and calculating a tradeable unit (e.g. share) quantity (OrderQty (38)) based upon this amount
!  to be used for the actual order and subsequent messages.
!
SecurityType              "SecurityType"              167 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Indicates type of security.
!
!If not presented the Security Type is FXSPOT.
!
!
!	FXNDF – Non-
! deliverable forward /required/
!	FXFWD – FX Forward /required/
!	FXSWAP – FX SWAP /require
! d/
!
!
LastSpotRate              "LastSpotRate"              194 NULL         PRICE              17  REAL               5
!
! FX Spot rate for the execution.
!
LastForwardPoints         "LastForwardPoints"         195 NULL         INTEGER            15  UINT              15
!
! FX forward points added to LastSpotRate (194).
!
!
!	
!	Applicable to FXFWD and FXNNDF
!	
!	
!	Ma
! y be a negative value and expressed in decimal form.
!	
!	
!	For FXSWAPS, if present, the valu
! e shall be ignored. Refer to the LegForwardPoints (Tag 1073) for the forward points for the ne
! ar/far legs.
!	
!
!
SecondaryOrderID          "SecondaryOrderID"          198 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Assigned by the party which accepts the order
!
!
!	Required for SSP (Block) trades executed on P
! OMS this ID represents the OrderID of the block.
!	Assigned by Thomson Reuters Trading Platfor
! m(s).
!
!
NoIOIQualifiers           "NoIOIQualifiers"           199 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Required if any IOIQualifiers are specified. Indicates the number of repeating IOIQualifiers. Num
! ber of repeating groups of IOIQualifiers (04).
!
MaturityMonthYear         "MaturityMonthYear"         200 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Specifies the month and year of maturity. Applicable for standardized derivatives which are typic
! ally only referenced by month and year (e.g. S&P futures). Note MaturityDate (a full date) can
!  also be specified. Can be used with standardized derivatives vs. the MaturityDate (54) field.
!  Month and Year of the maturity (used for standardized futures and options). Format options:YY
! YYMM (eg. 199903)YYYYMMDD (eg. 20030323)YYYYMMwN (200303w) for weekA specific date or can be a
! ppended to the MaturityMonthYear. For instance, if multiple standard products exist that matur
! e in the same Year and Month, but actually mature at a different time, a value can be appended
! , such as "w" or "w2" to indicate week as opposed to week 2 expiration. Likewise, the date (0-
! 3) can be appended to indicate a specific expiration (maturity date).
!
PutOrCall                 "PutOrCall"                 201 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Used to express option right Indicates whether an option contract is a put or call
!
!
!Note: thi
! s field is dropped when sent to target
!
StrikePrice               "StrikePrice"               202 NULL         PRICE              17  REAL               5
!
! Used for derivatives, such as options and covered warrants Strike Price for an Option.
!
OptAttribute              "OptAttribute"              206 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Used for derivatives, such as options and covered warrants to indicate a versioning of the contra
! ct when required due to corporate actions to the underlying. Should not be used to indicate ty
! pe of option - use the CFICode[461] for this purpose. Can be used for SecurityType (67) =OPT t
! o identify a particular security. Valid values vary by SecurityExchange:
!For Exchange: MONEP 
! (Paris)
!
!	L = Long (a.k.a. &quot;American&quot;)
!	S = Short (a.k.a. &quot;European&quot;)
!
! 
!For Exchanges: DTB (Frankfurt), HKSE (Hong Kong), and SOFFEX (Zurich)
!
!
!	0-9 = single dig
! it &quot;version&quot; number assigned by exchange following capital adjustments (0=current, =
! prior, 2=prior to , etc).
!
!
!
!Note: this field is dropped when sent to target
!
SecurityExchange          "SecurityExchange"          207 NULL         ALPHANUMERIC       15  ASCII_STRING        15
!
! Can be used to identify the security. Market used to help identify a security.&nbsp; Autex suppor
! t&nbsp; up to 5 characters
!
NoRoutingIDs              "NoRoutingIDs"              215 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Required if any RoutingType and RoutingIDs are specified. Indicates the number within repeating g
! roup. Number of repeating groups of RoutingID (27) and RoutingType (26) values.
!
RoutingType               "RoutingType"               216 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Indicates type of RoutingID. Required if NoRoutingIDs is > 0. Indicates the type of RoutingID (21
! 7) specified.
!
RoutingID                 "RoutingID"                 217 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Identifies routing destination. Required if NoRoutingIDs is > 0. Assigned value used to identify 
! a specific routing destination.
!
Spread                    "Spread"                    218 NULL         PRICE              17  REAL               5
!
! For Fixed Income For Fixed Income. Either Swap Spread or Spread to Benchmark depending upon the o
! rder type.Spread to Benchmark: Basis points relative to a benchmark. To be expressed as "count
!  of basis points" (vs. an absolute value). E.g. High Grade Corporate Bonds may express price a
! s basis points relative to benchmark (the Benchmark field). Note: Basis points can be negative
! .Swap Spread: Target spread for a swap.
!
BenchmarkCurveCurrency    "BenchmarkCurveCurrency"    220 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Identifies currency used for benchmark curve. See "Appendix 6-A: Valid Currency Codes" for inform
! ation on obtaining valid values.
!
BenchmarkCurveName        "BenchmarkCurveName"        221 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Name of benchmark curve.
!
BenchmarkCurvePoint       "BenchmarkCurvePoint"       222 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Point on benchmark curve. Free form values: e.g. "1Y", "7Y", "INTERPOLATED". Sample values:1M = c
! ombination of a number between 1-12 and a "M" for month1Y = combination of number between 1-10
! 0 and a "Y" for year}10Y-OLD = see above, then add "-OLD" when appropriateINTERPOLATED = the p
! oint is mathematically derived2/2031 5 3/8 = the point is stated via a combination of maturity
!  month / year and couponSee Fixed Income-specific documentation at http://www.fixprotocol.org 
! for additional values.
!
CouponRate                "CouponRate"                223 NULL         PRICE              17  REAL               5
!
! &nbsp;For Fixed Income. The rate of interest that, when multiplied by the principal, par value, o
! r face value of a bond, provides the currency amount of the periodic interest payment. The cou
! pon is always cited, along with maturity, in any quotation of a bond&#39;s price.&nbsp; Note: 
! this field is dropped when sent to target
!
CouponPaymentDate         "CouponPaymentDate"         224 NULL         DATE               11  DATE                11
!
! Date interest is to be paid. Used in identifying Corporate Bond issues. Date interest is to be pa
! id. Used in identifying Corporate Bond issues.
!
IssueDate                 "IssueDate"                 225 NULL         DATE               11  DATE                11
!
! Date instrument was issued. For Fixed Income IOIs for new issues, specifies the issue date. The d
! ate on which a bond or stock offering is issued. It may or may not be the same as the effectiv
! e date ("Dated Date") or the date on which interest begins to accrue ("Interest Accrual Date")
!
RepurchaseTerm            "RepurchaseTerm"            226 NULL         INTEGER            15  UINT               6
!
! Number of business days before repurchase of a repo.
!
RepurchaseRate            "RepurchaseRate"            227 NULL         PRICE              17  REAL               5
!
! Percent of par at which a Repo will be repaid. Represented as a percent, e.g. .9525 represents 95
! -/4 percent of par. (Note tag # was reserved in FIX 4.1, added in FIX 4.3)
!
Factor                    "Factor"                    228 NULL         INTEGER            15  UINT              15
!
! For Fixed Income: Amortization Factor for deriving Current face from Original face for ABS or MBS
!  securities, note the fraction may be greater than, equal to or less than 1. In TIPS securitie
! s this is the Inflation index.
!Qty * Factor * Price = Gross Trade Amount
!For Derivatives: Co
! ntract Value Factor by which price must be adjusted to determine the true nominal value of one
!  futures/options contract.
!(Qty * Price) * Factor = Nominal Value For Fixed Income: Amorizati
! on Factor for deriving Current face from Original face for ABS or MBS securities, note the fra
! ction may be greater than, equal to or less than . In TIPS securities this is the Inflation in
! dex. Qty * Factor * Price = Gross Trade AmountFor Derivatives: Contract Value Factor by which 
! price must be adjusted to determine the true nominal value of one futures/options contract. (Q
! ty * Price) * Factor = Nominal Value
!
ContractMultiplier        "ContractMultiplier"        231 NULL         INTEGER            15  UINT              15
!
! For Fixed Income, Convertible Bonds, Derivatives, etc. Note: If used, quantities should be expres
! sed in the &quot;nominal&quot; (e.g. contracts vs. shares) amount. Specifies the ratio or mult
! iply factor to convert from &quot;nominal&quot; units (e.g. contracts) to total units (e.g. sh
! ares) (e.g. 1.0, 100, 1000, etc). Applicable For Fixed Income, Convertible Bonds, Derivatives,
!  etc. In general quantities for all calsses should be expressed in the basic unit of the instr
! ument, e.g. shares for equities, norminal or par amount for bonds, currency for foreign exchan
! ge. When quantity is expressed in contracts, e.g. financing transactions and bond trade report
! ing, ContractMutliplier should contain the number of units in one contract and can be omitted 
! if the multiplier is the default amount for the instrument, i.e. 1,000 par of bonds, 1,000,000
!  par for financing transactions. Note: this field is dropped when sent to target.
!
NoStipulations            "NoStipulations"            232 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Number of stipulation entries
!
StipulationType           "StipulationType"           233 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Required if NoStipulations >0 For Fixed Income. Type of Stipulation. Other types may be used by m
! utual agreement of the counterparties.
!
StipulationValue          "StipulationValue"          234 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! For Fixed Income. Value of stipulation. The expression can be an absolute single value or a combi
! nation of values and logical operators:Strictly less thanStrictly greater thanLess than or equ
! al toGreater than or equal tovaluevalue - value2value OR value2value AND value2YESNOBargain co
! nditions recognized by the London Stock Exchange - to be used when StipulationType is "BGNCON"
! .CD = Special cum DividendXD = Special ex DividendCC = Special cum CouponXC = Special ex Coupo
! nCB = Special cum BonusXB = Special ex BonusCR = Special cum RightsXR = Special ex RightsCP = 
! Special cum Capital RepaymentsXP = Special ex Capital RepaymentsCS = Cash SettlementSP = Speci
! al PriceTR = Report for European Equity Market Securities in accordance with Chapter 8 of the 
! Rules.GD = Guaranteed DeliveryValues for StipulationType = "PXSOURCE":BB GENERICBB FAIRVALUEBR
! OKERTECESPEEDGOVPXHILLIARD FARBERICAPTRADEWEBTULLETT LIBERTYIf a particular side of the market
!  is wanted append /BID /OFFER or /MID.plus appropriate combinations of the above and other exp
! ressions by mutual agreement of the counterparties.
!
YieldType                 "YieldType"                 235 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Type of yield
!
Yield                     "Yield"                     236 NULL         PRICE              17  REAL               5
!
! Yield percentage.
!
RepoCollateralSecurityType "RepoCollateralSecurityType" 239 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Identifies the collateral used in the transaction. Valid values: see SecurityType (167) field
!
RedemptionDate            "RedemptionDate"            240 NULL         DATE               11  DATE                11
!
! Return of investor's principal in a security. Bond redemption can occur before maturity date.
!
UnderlyingCouponPaymentDate "UnderlyingCouponPaymentDate" 241 NULL         DATE               11  DATE                11
!
! Underlying security’s CouponPaymentDate. See CouponPaymentDate (224) field for description
!
UnderlyingIssueDate       "UnderlyingIssueDate"       242 NULL         DATE               11  DATE                11
!
! Underlying security’s CouponPaymentDate. See CouponPaymentDate (224) field for description
!
UnderlyingRepoCollateralSecurityType "UnderlyingRepoCollateralSecurityType" 243 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Underlying security’s RepoCollateralSecurityType. See RepoCollateralSecurityType (239) field fo
! r description
!
UnderlyingRepurchaseTerm  "UnderlyingRepurchaseTerm"  244 NULL         INTEGER            15  UINT               6
!
! Underlying security’s RepurchaseTerm. See RepurchaseTerm (226) field for description
!
UnderlyingRepurchaseRate  "UnderlyingRepurchaseRate"  245 NULL         PRICE              17  REAL               5
!
! Underlying security’s RepurchaseRate. See RepurchaseRate (227) field for description
!
UnderlyingFactor          "UnderlyingFactor"          246 NULL         INTEGER            15  UINT              15
!
! Underlying security’s Factor. See Factor (228) field for description
!
UnderlyingRedemptionDate  "UnderlyingRedemptionDate"  247 NULL         DATE               11  DATE                11
!
! Underlying security’s RedemptionDate. See RedemptionDate (240) field for description
!
LegCouponPaymentDate      "LegCouponPaymentDate"      248 NULL         DATE               11  DATE                11
!
! Multileg instrument's individual leg security’s CouponPaymentDate. See CouponPaymentDate (224) 
! field for description
!
LegIssueDate              "LegIssueDate"              249 NULL         DATE               11  DATE                11
!
! Multileg instrument's individual leg security’s IssueDate. See IssueDate (225) field for descri
! ption
!
LegRepoCollateralSecurityType "LegRepoCollateralSecurityType" 250 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Multileg instrument's individual leg security’s RepoCollateralSecurityType. See RepoCollateralS
! ecurityType (239) field for description
!
LegRepurchaseTerm         "LegRepurchaseTerm"         251 NULL         INTEGER            15  UINT               6
!
! Multileg instrument's individual leg security's RepurchaseTerm. See RepurchaseTerm (226) field fo
! r description
!
LegRepurchaseRate         "LegRepurchaseRate"         252 NULL         PRICE              17  REAL               5
!
! Multileg instrument's individual leg security’s RepurchaseRate. See RepurchaseRate (227) field 
! for description
!
LegFactor                 "LegFactor"                 253 NULL         INTEGER            15  UINT              15
!
! Multileg instrument's individual leg security’s Factor. See Factor (228) field for description
!
LegRedemptionDate         "LegRedemptionDate"         254 NULL         DATE               11  DATE                11
!
! Multileg instrument's individual leg security’s RedemptionDate. See RedemptionDate (240) field 
! for description
!
CreditRating              "CreditRating"              255 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! An evaluation of a company's ability to repay obligations or its likelihood of not defaulting. Th
! ese evaluation are provided by Credit Rating Agencies, i.e. S&P, Moody's.
!
UnderlyingCreditRating    "UnderlyingCreditRating"    256 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Underlying security’s CreditRating. See CreditRating (255) field for description
!
LegCreditRating           "LegCreditRating"           257 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Multileg instrument's individual leg security’s CreditRating. See CreditRating (255) field for 
! description
!
MDReqID                   "MDReqID"                   262 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Unique identifier for the market data request.
!
&nbsp;SubscriptionRequestType "&nbsp;SubscriptionRequestType" 263 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! SubscriptionRequestType
!
&nbsp;MarketDepth         "&nbsp;MarketDepth"         264 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Depth of market for Book Snapshot / Incremental updates
!
MDUpdateType              "MDUpdateType"              265 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Specifies the type of Market Data update
!
&nbsp;NoMDEntryTypes      "&nbsp;NoMDEntryTypes"      267 NULL         INTEGER            15  UINT               6
!
! Number of MDEntryTypes
!Both sides [Bid &amp; Offer] are always sent regardless to the value in t
! he Tag 269.
!
NoMDEntries               "NoMDEntries"               268 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Number of entries that follow (Will be 1 or more)
!
&nbsp;MDEntryType         "&nbsp;MDEntryType"         269 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Type of Market Data entry.
!
!Can be used in combination, for example:
!
!
!	0,1 = Market data
!	
! 7,8 = Day High Low
!	2,B = Trade Ticker and Volume
!
!
MDEntryPx                 "MDEntryPx"                 270 NULL         PRICE              17  REAL               5
!
! Current value of bid/offer for currency pair.
!
MDEntrySize               "MDEntrySize"               271 NULL         INTEGER            15  UINT              15
!
! Current quantity for quoted rate.
!
TickDirection             "TickDirection"             274 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Mandatory on Ticker subscriptions
!
MDEntryID                 "MDEntryID"                 278 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Unique identifier for this market data quote. Updates to this market data bid/offer will use this
!  ID to reference the quote.
!
MDUpdateAction            "MDUpdateAction"            279 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Type of market data update action on OB:
!&nbsp;
!
MDReqRejReason            "MDReqRejReason"            281 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Reason for rejection.
!
MDEntryOriginator         "MDEntryOriginator"         282 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Text field&nbsp; indicating the originator of&nbsp; the market data order. Normally this field wi
! ll be empty, except in one of two cases.
!
!
!	When an&nbsp; order was placed&nbsp; by&nbsp; a
! &nbsp; related FIX&nbsp; order entry session for the trading firm. In this case the field will
!  simply state “FIRM” in order to flag the market data as being an order belonging to the f
! irm.
!	When an order is entered in a white label matching engine environment with a party role
!  value of 61. The PartyID value on such an order will be copied to tag 282 when that order is 
! published as market data.
!	When an order is entered in a white label matching engine environm
! ent with a ReferenceID, the ReferenceID value on such an order will be copied to tag 282 when 
! that order is published as market data
!	When an order is entered in a white label matching en
! gine environment with both a party role value of 61 and a ReferenceID value, the PartyID value
!  and ReferenceID will be appended together and populated in tag 282 when that order is publish
! ed as market data. The fields will be pipe delimited. So format will be “PartyID + ‘|’ +
!  ReferenceID”
!
!
!BS:
!Provider ID; TOB FIX sessions only
!
MDEntryPositionNo         "MDEntryPositionNo"         290 NULL         INTEGER            15  UINT               6
!
! Can be used to determine time-priority of the quote.
!
NoQuoteEntries            "NoQuoteEntries"            295 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! The number of securities (instruments) whose quotes are to be canceled
!Not required when cancell
! ing all quotes.
!
QuoteCancelType           "QuoteCancelType"           298 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Identifies the type of quote cancel.
!
QuoteEntryID              "QuoteEntryID"              299 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Quote ID; different for bid and offer
!
QuoteRequestType          "QuoteRequestType"          303 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Indicates the type of Quote Request being generated
!
UnderlyingSecurityIDSource "UnderlyingSecurityIDSource" 305 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Underlying security’s SecurityIDSource. Valid values: see SecurityIDSource (22) field
!
UnderlyingIssuer          "UnderlyingIssuer"          306 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Underlying security’s Issuer. See Issuer (106) field for description
!
UnderlyingSecurityDesc    "UnderlyingSecurityDesc"    307 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Underlying security’s SecurityDesc. See SecurityDesc (107) field for description
!
UnderlyingSecurityExchange "UnderlyingSecurityExchange" 308 NULL         ALPHANUMERIC       15  ASCII_STRING        15
!
! Underlying security’s SecurityExchange. Can be used to identify the underlying security. Valid 
! values: see SecurityExchange (207)
!
UnderlyingSecurityID      "UnderlyingSecurityID"      309 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Underlying security’s SecurityID. See SecurityID (48) field for description
!
UnderlyingSecurityType    "UnderlyingSecurityType"    310 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Underlying security’s SecurityType. Valid values: see SecurityType (167) field
!
UnderlyingSymbol          "UnderlyingSymbol"          311 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Underlying security’s Symbol. See Symbol (55) field for description
!
UnderlyingSymbolSfx       "UnderlyingSymbolSfx"       312 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Underlying security’s SymbolSfx. See SymbolSfx (65) field for description
!
UnderlyingMaturityMonthYear "UnderlyingMaturityMonthYear" 313 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Underlying security’s MaturityMonthYear. Can be used with standardized derivatives vs. the Unde
! rlyingMaturityDate field. See MaturityMonthYear (200) field for description
!
UnderlyingPutOrCall       "UnderlyingPutOrCall"       315 NULL         INTEGER            15  UINT               6
!
! Used to express option right Underlying security’s PutOrCall. See PutOrCall (201) field for des
! cription
!
UnderlyingStrikePrice     "UnderlyingStrikePrice"     316 NULL         PRICE              17  REAL               5
!
! Underlying security’s StrikePrice. See StrikePrice (202) field for description
!
UnderlyingOptAttribute    "UnderlyingOptAttribute"    317 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Underlying security’s OptAttribute. See OptAttribute (206) field for description
!
UnderlyingCurrency        "UnderlyingCurrency"        318 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Specific to the  (not in ) Underlying security’s Currency. See Currency (5) field for descripti
! on and valid values
!
SecurityReqID             "SecurityReqID"             320 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Unique identifier for this security list request
!
SecurityRequestType       "SecurityRequestType "      321 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Type of Security Definition Request being issued.
!
SecurityResponseID        "SecurityResponseID"        322 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Identifier for this security list message
!
SecurityResponseType      "SecurityResponseType"      323 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Type of response that is embodied in this security definition message.
!
TradingSessionID          "TradingSessionID"          336 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Identifier for Trading Session. A trading session spans an extended period of time that can also 
! be expressed informally in terms of the trading day. Usage is determined by market or counterp
! arties. To specify good for session where session spans more than one calendar day, use TimeIn
! Force = Day in conjunction with TradingSessionID. Bilaterally agreed values of data type "Stri
! ng" that start with a character can be used for backward compatibility.
!
EncodedIssuerLen          "EncodedIssuerLen"          348 NULL         INTEGER            15  UINT               6
!
! Must be set if EncodedIssuer field is specified and must immediately precede it. Byte length of e
! ncoded (non-ASCII characters) EncodedIssuer (349) field.&nbsp; Note: this field is dropped whe
! n sent to target
!
EncodedIssuer             "EncodedIssuer"             349 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! &nbsp;Encoded (non-ASCII characters) representation of the Issuer field in the encoded format spe
! cified via the MessageEncoding field. Encoded (non-ASCII characters) representation of the Iss
! uer field in the encoded format specified via the MessageEncoding (347) field. If used, the AS
! CII (English) representation should also be specified in the Issuer field. Note: this field is
!  dropped when sent to target
!
EncodedSecurityDescLen    "EncodedSecurityDescLen"    350 NULL         INTEGER            15  UINT               6
!
! &nbsp;Must be set if EncodedSecurityDesc field is specified and must immediately precede it. Byte
!  length of encoded (non-ASCII characters) EncodedSecurityDesc (351) field. Note: this field is
!  dropped when sent to target
!
EncodedSecurityDesc       "EncodedSecurityDesc"       351 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Encoded (non-ASCII characters) representation of the SecurityDesc field in the encoded format spe
! cified via the MessageEncoding field. Encoded (non-ASCII characters) representation of the Sec
! urityDesc (107) field in the encoded format specified via the MessageEncoding (347) field. If 
! used, the ASCII (English) representation should also be specified in the SecurityDesc field. N
! ote: this field is dropped when sent to target
!
EncodedTextLen            "EncodedTextLen"            354 NULL         INTEGER            15  UINT               6
!
! Must be set if EncodedText field is specified and must immediately precede it. Byte length of enc
! oded (non-ASCII characters) EncodedText (355) field.
!
EncodedText               "EncodedText"               355 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Encoded (non-ASCII characters) representation of the Text field in the encoded format specified v
! ia the MessageEncoding field. Encoded (non-ASCII characters) representation of the Text (58) f
! ield in the encoded format specified via the MessageEncoding (347) field. If used, the ASCII (
! English) representation should also be specified in the Text field.
!
EncodedUnderlyingIssuerLen "EncodedUnderlyingIssuerLen" 362 NULL         INTEGER            15  UINT               6
!
! Byte length of encoded (non-ASCII characters) EncodedUnderlyingIssuer (363) field.
!
EncodedUnderlyingIssuer   "EncodedUnderlyingIssuer"   363 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Encoded (non-ASCII characters) representation of the UnderlyingIssuer (306) field in the encoded 
! format specified via the MessageEncoding (347) field. If used, the ASCII (English) representat
! ion should also be specified in the UnderlyingIssuer field.
!
EncodedUnderlyingSecurityDescLen "EncodedUnderlyingSecurityDescLen" 364 NULL         INTEGER            15  UINT               6
!
! Byte length of encoded (non-ASCII characters) EncodedUnderlyingSecurityDesc (365) field.
!
EncodedUnderlyingSecurityDesc "EncodedUnderlyingSecurityDesc" 365 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Encoded (non-ASCII characters) representation of the UnderlyingSecurityDesc (307) field in the en
! coded format specified via the MessageEncoding (347) field. If used, the ASCII (English) repre
! sentation should also be specified in the UnderlyingSecurityeDesc field.
!
LastMsgSeqNumProcessed    "LastMsgSeqNumProcessed"    369 NULL         INTEGER            15  UINT               6
!
! The last MsgSeqNum value received by the FIX engine and processed by downstream application, such
!  as trading system or order routing system. Can be specified on every message sent. Useful for
!  detecting a backlog with a counterparty. The last MsgSeqNum (34) value received by the FIX en
! gine and processed by downstream application, such as trading engine or order routing system. 
! Can be specified on every message sent. Useful for detecting a backlog with a counterparty.
!
RefMsgType                "RefMsgType "               372 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! The message type of the FIX message being rejected.
!
ContraBroker              "ContraBroker"              375 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Specifies the prime broker of the opposing side for the execution.
!
ExecRestatementReason    "ExecRestatement Reason"    378 NULL         INTEGER            15  UINT               6
!
! Code to identify reason for an ExecutionRpt message sent with ExecType=Restated.
!
!
!	99 /Used i
! n the case where a Hold All request was not satisfied for this order as a result of an MQL vio
! lation and as a result the state of the order remains unchanged.
!
!
BusinessRejectRefID       "BusinessRejectRefID "      379 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! When this message is generated in response to a New,Amend, or Cancel order message the ClOrdID wi
! ll appear in this field.
!
BusinessRejectReason      "BusinessRejectReason"      380 NULL         INTEGER            15  UINT               6
!
! "0" Other"1" Unknown ID"2" Unknown Security"3" Unknown Message Type"4" Application not available"
! 5" Conditionally required field missing"6" Not Authorized"7" DeliverTo firm not available"18" 
! Invalid price increment"19" Query result complete.
!
NoContraBrokers           "NoContraBrokers"           382 NULL         INTEGER            15  UINT               6
!
! Required if ContraBroker is specified and Order Status is Filled/Partially filled. Always NoContr
! aBrokers=1 as a FXT execution has one counterparty.
!
NoTradingSessions         "NoTradingSessions"         386 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! The use of this field does not conform to standard FIX. This field is used to better support FX t
! rading
!
!The use of this field does not conform to standard FIX. This field is used to better
!  support FX trading.
!
DiscretionInst            "DiscretionInst"            388 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Code to identify the price a DiscretionOffsetValue (389) is related to and should be mathematical
! ly added to.
!Supported value:
!
DiscretionOffset          "DiscretionOffset"          389 NULL         INTEGER            15  UINT              15
!
! Amount (signed) added to the "related to" price specified via DiscretionInst. This tag is not all
! owed for market orders.
!
PriceType                 "PriceType"                 423 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Code to represent the price type. For Financing transactions PriceType implies the "repo type" ‍
! ? Fixed or Floating – 9 (Yield) or 6 (Spread) respectively - and Price (44) gives the corres
! ponding "repo rate".
!
ExpireDate                "ExpireDate"                432 NULL         DATE               11  DATE                11
!
! Date of order expiration if TimeInForce = GTD [Good Till Date]. Always expressed in terms of the 
! local market date.
!
!
!	The date at which the order expires is determined by the local market
! 's business practices
!
!
CxlRejResponseTo          "CxlRejResponseTo"          434 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Identifies the type of request that a Cancel Reject is in response to.
!
UnderlyingCouponRate      "UnderlyingCouponRate"      435 NULL         PRICE              17  REAL               5
!
! Underlying security’s CouponRate. See CouponRate (223) field for description
!
UnderlyingContractMultiplier "UnderlyingContractMultiplier" 436 NULL         INTEGER            15  UINT              15
!
! Underlying security’s ContractMultiplier. See ContractMultiplier (231) field for description
!
PartyIDSource             "PartyIDSource"             447 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Source of the PartyID (448) value
!
PartyID                   "PartyID"                   448 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Party identifier/code
!
PartyRole                 "PartyRole"                 452 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! 13 - Order Origination Firm
!
!The value to be either DEALING_CODE or Entity Name&nbsp;
!
!
!	Cor
! responding PartyIDSource Tag447 =’D’
!
!
!17 – ContraFirm /for single define counterpart
! y only/ The value to be either DEALING_CODE or Entity Name or Entity Name
!
!
!	Corresponding 
! PartyIDSource Tag447 =’D’
!
!
!21 - Clearing Organization
!The value to be either LEI or E
! ntity Name
!
!
!	For LEI Corresponding PartyIDSource Tag447 =’C’
!	For Entity Name Corresp
! onding PartyIDSource Tag447 =’D’
!	Applicable for SEF trades that require clearing only
!

! !
!73 - Execution Venue
!The value to be either LEI or Entity Name
!
!
!	For LEI Corresponding
!  PartyIDSource Tag447 =’C’
!		The LEI value of the Execution Venue is related to TRSEF
!	F
! or Entity Name Corresponding PartyIDSource Tag447 = ‘D’
!
!
NoPartyIDsNumInGroup      "NoPartyIDsNumInGroup"      453 NULL         INTEGER            15  UINT               6
!
! Number of PartyID (448) , PartyIDSource (447) , and PartyRole (452) entries Tags marked as ‘C‍
! ? [conditional] are required if NoPartyIDs NumInGroup (Tag 453) is presented
!
NoSecurityAltID           "NoSecurityAltID"           454 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Number of SecurityAltID (455) entries.
!
SecurityAltID             "SecurityAltID"             455 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Alternate Security identifier value for this security of SecurityAltIDSource (456) type (e.g. CUS
! IP, SEDOL, ISIN, etc). Requires SecurityAltIDSource.
!
SecurityAltIDSource       "SecurityAltIDSource"       456 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Identifies class or source of the SecurityAltID value. Required if SecurityAltID is specified. Sa
! me valid values as the SecurityIDSource (22) field
!
NoUnderlyingSecurityAltID "NoUnderlyingSecurityAltID" 457 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Number of UnderlyingSecurityAltID (458) entries.
!
UnderlyingSecurityAltID   "UnderlyingSecurityAltID"   458 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Alternate Security identifier value for this underlying security of UnderlyingSecurityAltIDSource
!  (459) type (e.g. CUSIP, SEDOL, ISIN, etc). Requires UnderlyingSecurityAltIDSource.
!
UnderlyingSecurityAltIDSource "UnderlyingSecurityAltIDSource" 459 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Identifies class or source of the UnderlyingSecurityAltID value. Required if UnderlyingSecurityAl
! tID is specified. Same valid values as the SecurityIDSource (22) field
!
Product                   "Product"                   460 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Indicates the type of product the security is associated with (high-level category) Indicates the
!  type of product the security is associated with. See also the CFICode (461) and SecurityType 
! (167) fields.
!
CFICode                   "CFICode"                   461 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Indicates the type of security using ISO 10962 standard, Classification of Financial Instruments 
! (CFI code) values. It is recommended that CFICode be used instead of SecurityType for non-Fixe
! d Income instruments. Indicates the type of security using ISO 10962 standard, Classification 
! of Financial Instruments (CFI code) values. ISO 10962 is maintained by ANNA (Association of Na
! tional Numbering Agencies) acting as Registration Authority. See the Product (460) and Securit
! yType (167) fields. It is recommended that CFICode be used instead of SecurityType (167) for n
! on-Fixed Income instruments.
!
UnderlyingProduct         "UnderlyingProduct"         462 NULL         INTEGER            15  UINT               6
!
! Underlying security’s Product. Valid values: see Product(460) field
!
UnderlyingCFICode         "UnderlyingCFICode"         463 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Underlying security’s CFICode. Valid values: see CFICode (461)field
!
IndividualAllocID         "IndividualAllocID"         467 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Unique identifier for an underlying account within specific NoAllocs (78)
!repeating group.
!
!
!
! 	Refer to TRAP-3 below for the rule of formation of IndividualAllocID
!
!
!The use of this fie
! ld does not conform to standard FIX. This field is used to better support FX trading.
!
RoundingDirection         "RoundingDirection"         468 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! For CIV - Optional Specifies which direction to round For CIV – indicates whether or not the qu
! antity of shares/units is to be rounded and in which direction where OrderCashAmt or (for CIV 
! only) OrderPercent are specified on an order.The default is for rounding to be at the discreti
! on of the executing broker or fund manager. e.g. for an order specifying CashOrdQty or OrderPe
! rcent if the calculated number of shares/units was 325.76 and RoundingModulus was 10 – "roun
! d down" would give 320 units, "round up" would give 330 units and "round to nearest" would giv
! e 320 units.
!
RoundingModulus           "RoundingModulus"           469 NULL         INTEGER            15  UINT              15
!
! For CIV - Optional For CIV - a float value indicating the value to which rounding is required. i.
! e. 10 means round to a multiple of 10 units/shares; 0.5 means round to a multiple of 0.5 units
! /shares. The default, if RoundingDirection is specified without RoundingModulus, is to round t
! o a whole unit/share.
!
CountryOfIssue            "CountryOfIssue"            470 NULL         INTEGER            15  UINT              15
!
! ISO Country code of instrument issue (e.g. the country portion typically used in ISIN). Can be us
! ed in conjunction with non-ISIN SecurityID (e.g. CUSIP for Municipal Bonds without ISIN) to pr
! ovide uniqueness. ISO Country code of instrument issue (e.g. the country portion typically use
! d in ISIN). Can be used in conjunction with non-ISIN SecurityID (48) (e.g. CUSIP for Municipal
!  Bonds without ISIN) to provide uniqueness.
!
StateOrProvinceOfIssue    "StateOrProvinceOfIssue"    471 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! A two-character state or province abbreviation. A two-character state or province abbreviation.
!
LocaleOfIssue             "LocaleOfIssue"             472 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! The three-character IATA code for a locale (e.g. airport code for Municipal Bonds). Identifies th
! e locale. For Municipal Security Issuers other than state or province refer to www.atmos.alban
! y.edu or IATA (International Air Tranfor sport Association) city codes at www.iata.org.
!
OrderPercent              "OrderPercent"              516 NULL         PRICE              17  REAL               5
!
! For CIV - Optional. One of CashOrderQty, OrderQty or (for CIV only) OrderPercent is required. Not
! e that unless otherwise specified, only one of CashOrderQty, OrderQty, or OrderPercent should 
! be specified. For CIV specifies the approximate order quantity desired. For a CIV Sale it spec
! ifies percentage of investor's total holding to be sold. For a CIV switch/exchange it specifie
! s percentage of investor's cash realised from sales to be re-invested. The executing broker, i
! ntermediary or fund manager is responsible for converting and calculating OrderQty (38) in sha
! res/units for subsequent messages.
!
PartySubID                "PartySubID"                523 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Sub-identifier.
!
!
!	At least one value is required if Tag 802 is presented
!	All Unique Transac
! tion IDs must be unique in one single trade.
!	Legal Entity Identifier value /LEI/. Also curre
! ntly known as CICI (CFTC Interim Compliant Identifier) value
!	
!		Supporting values: LEI
!		O
! nly applicable for PartyRoles (Tag 452) set to 13, 17, 21,73, 82
!	
!	
!	Clearing Exemption
!	
! 
!		Supporting values: ‘Y’ or ‘N’
!		Only applicable for PartyRoles (Tag 452) set to 1
! 3 and 17
!		Corresponding Tag 803 = 4204
!	
!	
!	Execution Venue Type
!	
!		For the SEF trades
!  the value will always to be ‘SEF’
!		For Non-SEF trades value to be ‘NON-SEF’’
!		O
! nly applicable for PartyRole (Tag 452) set to 73
!		Corresponding Tag 803 = 4205
!	
!	
!
!
SecondaryExecID           "SecondaryExecID"           527 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Assigned by the party which accepts the order; can be used to provide the ExecID (17) used by an 
! exchange or executing system.
!MATCHING:
!Trade Event ID from the FX Swap Hard Match Notificat
! ion.
!
QuoteType                 "QuoteType"                 537 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Identifies the type of quote
!
MaturityDate              "MaturityDate"              541 NULL         DATE               11  DATE                11
!
! Instrument’s Date of Maturity; always expressed in YYYYMMDD&nbsp; format
!
!
!	For instance if 
! spot is 1/1/2003 then the MaturityDate for&nbsp; EUR/JPY 1M would be 20030201.
!	For NDFs this
!  tag represents the fixing date of the instrument.
!
!
!&nbsp;The use of this field does not c
! onform to standard FIX. This field is used to better support FX trading.
!
UnderlyingMaturityDate    "UnderlyingMaturityDate"    542 NULL         DATE               11  DATE                11
!
! Underlying security’s maturity date. See MaturityDate (541) field for description
!
InstrRegistry             "InstrRegistry"             543 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! The location at which records of ownership are maintained for this instrument, and at which owner
! ship changes must be recorded. Can be used in conjunction with ISIN to address ISIN uniqueness
!  issues. Values may include BIC for the depository or custodian who maintain ownership records
! , the ISO country code for the location of the record, or the value "ZZ" to specify physical o
! wnership of the security (e.g. stock certificate).
!
NoLegs                    "NoLegs"                    555 NULL         INTEGER            15  UINT               6
!
! P { margin-bottom: 0.21cm; }
!
!
!Number
!of InstrumentLeg repeating group instances.
!
!This
!Gr
! oup will be populated if the number of the Number of Legs &gt; 1*
!
!Tags
!	marked as ‘C’ 
! [conditional] in NoLegs repeating group are
!	required if the Tag 555 is
! present
!
!	Tags
!	
! marked as ‘CR’ [conditional] in NoLegs repeating group are
!	required for SWAP NDFs  only 
! if the Tag 555 is present
!
!
LegCurrency               "LegCurrency"               556 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Currency associated with a particular Leg's quantity
!
SecurityListRequestType   "SecurityListRequestType"   559 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Type of security list request being made.
!
SecurityRequestResult     "SecurityRequestResult"     560 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Result of the Security Request identified by the SecurityReqID.
!
LegPrice&nbsp;            "LegPrice&nbsp;"            566 NULL         PRICE              17  REAL               5
!
! The price (ALL-IN-Price) for the individual leg
!
CustOrderCapacity         "CustOrderCapacity"         582 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Capacity of customer placing the order.
!Primarily used by futures exchanges to indicate the CTIC
! ode (customer type indicator) as required by the US CFTC (Commodity Futures Trading Commission
! ).Not required for FXSPOT trades
!
ClOrdLinkID               "ClOrdLinkID"               583 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Permits order originators to tie together groups of orders in which trades resulting from orders 
! are associated for a specific purpose
!
LegSettlType              "LegSettlType"              587 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Equivalent to the Tag 63. Although it’s leg specific SettlType and it’s always expressed as a
!  Tenor.
!
!
!	Required if Leg Value Date [LegSettlDate - Tag 588] is not presented.
!	If both,
!  Leg Tenor [LegSettlType - Tag 587] and Leg Value Date [LegSettlDate - Tag 588], are presented
!  then a validation of the values in these two tags will be performed. Mismatch will result in 
! order rejection.
!	If both, Leg Tenor [LegSettlType - Tag 587] and Leg Fixing Date [LegMaturit
! yDate - Tag 611], are presented, then:
!	
!		Leg Value Date [LegSettlDate - Tag 588] will be c
! alculated based on the value in the
!		Leg Tenor [LegSettlType- Tag 587] and validated against
!  value in the Leg Fixing Date [LegMaturityDate - Tag 611]
!	
!	
!	If all 3 tags – the Leg Te
! nor [LegSettlType - Tag 587], Leg Value Date [LegSettlDate - Tag 588], and Leg Fixing Date [Le
! gMaturityDate - Tag 611] are presented, then the validation will be performed against values i
! n all these tags.
!	
!		If the validation of these values will fail, then the order will be re
! jected.
!	
!	
!
!
!We use it differently – we specify Tenor, FIX shows 6 - Future
!
LegSettlementDate         "LegSettlementDate"         588 NULL         DATE               11  DATE                11
!
! Instrument’s Settlement Date; always expressed in YYYYMMDD format for this leg.
!
!
!	Required 
! if Leg Tenor [LegSettlType - Tag 587] is not presented.
!	If both, Leg Value Date [LegSettlDat
! e - Tag 588] and Leg Tenor [LegSettlType - Tag 587], are presented then a validation of the va
! lues in these two tags will be performed. Mismatch will result in order rejection.
!
!
!
!	If 
! both, Leg Fixing Date [LegMaturityDate - Tag 611] and Leg Tenor [LegSettlType - Tag 587], are 
! presented, then:
!	
!		Leg Value Date [LegSettlDate - Tag 588] will be calculated based on the
!  value in the Leg Tenor [LegSettlType - Tag 587] and validated against value in the Leg Fixing
!  Date [LegMaturityDate - Tag 611]
!	
!	
!
!
!
!	If all 3 tags – the Leg Tenor [LegSettlType 
! - Tag 587], Leg Value Date [LegSettlDate – Tag 588], and Leg Fixing Date [LegMaturityDate - 
! Tag 611] are presented, then the validation will be performed against values in all these tags
! .
!	
!		If the validation of these values will fail, then the order will be rejected.
!	
!	
!
!
UnderlyingCountryOfIssue  "UnderlyingCountryOfIssue"  592 NULL         INTEGER            15  UINT              15
!
! Underlying security’s CountryOfIssue. See CountryOfIssue (470) field for description
!
UnderlyingStateOrProvinceOfIssue "UnderlyingStateOrProvinceOfIssue" 593 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Underlying security’s StateOrProvinceOfIssue. See StateOrProvinceOfIssue (471) field for descri
! ption
!
UnderlyingLocaleOfIssue   "UnderlyingLocaleOfIssue"   594 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Underlying security’s LocaleOfIssue. See LocaleOfIssue (472) field for description
!
UnderlyingInstrRegistry   "UnderlyingInstrRegistry"   595 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Underlying security’s InstrRegistry. See InstrRegistry (543) field for description
!
LegCountryOfIssue         "LegCountryOfIssue"         596 NULL         INTEGER            15  UINT              15
!
! Multileg instrument's individual leg security’s CountryOfIssue. See CountryOfIssue (470) field 
! for description
!
LegStateOrProvinceOfIssue "LegStateOrProvinceOfIssue" 597 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Multileg instrument's individual leg security’s StateOrProvinceOfIssue. See StateOrProvinceOfIs
! sue (471) field for description
!
LegLocaleOfIssue          "LegLocaleOfIssue"          598 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Multileg instrument's individual leg security’s LocaleOfIssue. See LocaleOfIssue (472) field fo
! r description
!
LegInstrRegistry          "LegInstrRegistry"          599 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Multileg instrument's individual leg security’s InstrRegistry. See InstrRegistry (543) field fo
! r description
!
LegSymbol                 "LegSymbol"                 600 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Security Symbol for the individual leg. See Symbol (55) field for description
!
LegSymbolSfx              "LegSymbolSfx"              601 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Multileg instrument's individual security’s SymbolSfx. See SymbolSfx (65) field for description
!
LegSecurityID             "LegSecurityID"             602 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Multileg instrument's individual security’s SecurityID. See SecurityID (48) field for descripti
! on
!
LegSecurityIDSource       "LegSecurityIDSource"       603 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Multileg instrument's individual security’s SecurityIDSource. See SecurityIDSource (22) field f
! or description
!
NoLegSecurityAltID        "NoLegSecurityAltID"        604 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Multileg instrument's individual security’s NoSecurityAltID. See NoSecurityAltID (454) field fo
! r description
!
LegSecurityAltID          "LegSecurityAltID"          605 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Multileg instrument's individual security’s SecurityAltID. See SecurityAltID (455) field for de
! scription
!
LegSecurityAltIDSource    "LegSecurityAltIDSource"    606 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Multileg instrument's individual security’s SecurityAltIDSource. See SecurityAltIDSource (456) 
! field for description
!
LegProduct                "LegProduct"                607 NULL         INTEGER            15  UINT               6
!
! Multileg instrument's individual security’s Product. See Product (460) field for description
!
LegCFICode                "LegCFICode"                608 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Multileg instrument's individual security’s CFICode. See CFICode (461) field for description
!
LegSecurityType           "LegSecurityType"           609 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Indicates type of security.
!
LegMaturityMonthYear      "LegMaturityMonthYear"      610 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Multileg instrument's individual security’s MaturityMonthYear. See MaturityMonthYear (200) fiel
! d for description
!
LegMaturityDate           "LegMaturityDate"           611 NULL         DATE               11  DATE                11
!
! Instrument’s Date of Maturity; always expressed in YYYYMMDD format.
!
!For NDFs this tag repres
! ents the fixing date of the contract.
!
!
!	If both, Leg Fixing Date [LegMaturityDate - Tag 61
! 1] and Leg Tenor [LegSettlType - Tag 587], are presented, then:
!	
!		Leg Value Date [LegSettl
! Date - Tag 588] will be calculated based on the value in the Leg Tenor [LegSettlType - Tag 587
! ] and validated against value in the Leg Fixing Date [LegMaturityDate - Tag 611]
!		If the val
! idation of these values will fail, then the order will be rejected.
!	
!	
!	If both, Leg Fixin
! g Date [LegMaturityDate - Tag 611] and Leg Value Date [LegSettlDate – Tag 588] are presented
! , then a validation of the values in these two tags will be performed. Mismatch will result in
!  order rejection.
!	If all 3 tags – the Leg Tenor [LegSettlType - Tag 587], Leg Value Date [
! LegSettlDate – Tag 588], and Leg Fixing Date [LegMaturityDate - Tag 611] are presented, then
!  the validation will be performed against values in all these tags.
!	
!		If the validation of
!  these values will fail, then the order will be rejected.
!	
!	
!
!
LegStrikePrice            "LegStrikePrice"            612 NULL         PRICE              17  REAL               5
!
! Multileg instrument's individual security’s StrikePrice. See StrikePrice (202) field for descri
! ption
!
LegOptAttribute           "LegOptAttribute"           613 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Multileg instrument's individual security’s OptAttribute. See OptAttribute (206) field for desc
! ription
!
LegContractMultiplier     "LegContractMultiplier"     614 NULL         INTEGER            15  UINT              15
!
! Multileg instrument's individual security’s ContractMultiplier. See ContractMultiplier (231) fi
! eld for description
!
LegCouponRate             "LegCouponRate"             615 NULL         PRICE              17  REAL               5
!
! Multileg instrument's individual security’s CouponRate. See CouponRate (223) field for descript
! ion
!
LegSecurityExchange       "LegSecurityExchange"       616 NULL         ALPHANUMERIC       15  ASCII_STRING        15
!
! Multileg instrument's individual security’s SecurityExchange. See SecurityExchange (207) field 
! for description
!
LegIssuer                 "LegIssuer"                 617 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Multileg instrument's individual security’s Issuer. See Issuer (106) field for description
!
EncodedLegIssuerLen       "EncodedLegIssuerLen"       618 NULL         INTEGER            15  UINT               6
!
! Multileg instrument's individual security’s EncodedIssuerLen. See EncodedIssuerLen (348) field 
! for description
!
EncodedLegIssuer          "EncodedLegIssuer"          619 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Multileg instrument's individual security’s EncodedIssuer. See EncodedIssuer (349) field for de
! scription
!
LegSecurityDesc           "LegSecurityDesc"           620 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Multileg instrument's individual security’s SecurityDesc. See SecurityDesc (107) field for desc
! ription
!
EncodedLegSecurityDescLen "EncodedLegSecurityDescLen" 621 NULL         INTEGER            15  UINT               6
!
! Multileg instrument's individual security’s EncodedSecurityDescLen. See EncodedSecurityDescLen 
! (350) field for description
!
EncodedLegSecurityDesc    "EncodedLegSecurityDesc"    622 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Multileg instrument's individual security’s EncodedSecurityDesc. See EncodedSecurityDesc (351) 
! field for description
!
LegRatioQty               "LegRatioQty"               623 NULL         INTEGER            15  UINT              15
!
! Specific to the  (not in ) The ratio of quantity for this individual leg relative to the entire m
! ultileg security.
!
LegSide                   "LegSide"                   624 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! The side of this individual leg.
!The side reflects whether or not the originator of the order wi
! shes to buy or sell the “dealt” currency, specified in Tag 556 - LegCurrency.
!
TradingSessionSubID       "TradingSessionSubID"       625 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Optional market assigned sub identifier for a trading session. Usage is determined by market or c
! ounterparties. Used by US based futures markets to identify exchange specific execution time b
! racket codes as required by US market regulations.
!
MidPrice                  "MidPrice"                  631 NULL         PRICE              17  REAL               5
!
! Mid price/rate
!
!BS:
!NDFs only ; quoted order only
!
LegLastPx                 "LegLastPx"                 637 NULL         PRICE              17  REAL               5
!
! Execution price for the individual leg.
!
!
!	Required if ExecType = F (fill or partial fill)
!
!
LegRefID                  "LegRefID"                  654 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Unique Transaction ID of the individual leg
!
!
!	Refer to TRAP-3 below for the rule of formation
!  of IndividualAllocID
!
!
BenchmarkPrice            "BenchmarkPrice"            662 NULL         PRICE              17  REAL               5
!
! Specifies the price of the benchmark.
!
BenchmarkPriceType        "BenchmarkPriceType"        663 NULL         INTEGER            15  UINT               6
!
! Must be present if BenchmarkPrice is used. Identifies type of BenchmarkPrice (662). See PriceType
!  (423) for valid values.
!
ContractSettlMonth        "ContractSettlMonth"        667 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Must be present for MBS/TBA Specifies when the contract (i.e. MBS/TBA) will settle.
!
NoLegAllocs               "NoLegAllocs"               670 NULL         INTEGER            15  UINT               6
!
! Number of repeating groups for pre- allocation trade within this leg
!Tags marked as ‘C’ [con
! ditional] in LegPreAllocGrp are required if the&nbsp; number of NoLegAllocs ≥ 1 Tags marked 
! as ‘CR’ are conditionally required within LegPreAllocGrp if the number of NoLegAllocs ≥
!
LegAllocAccount           "LegAllocAccount"           671 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Specify the Leg’s Allocation Account name /mnemonic/
!
!
!	Must be first field in repeating gro
! up.
!
!
LegIndividualAlocID      "LegIndividualAlo cID"      672 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Unique identifier for an underlying account within specific NoAllocs (670)
!repeating group.
!
LegAllocQty               "LegAllocQty"               673 NULL         INTEGER            15  UINT              15
!
! Quantity being allocated to the underlying account within specific NoLegAllocs (670)repeating gro
! up
!
!
!	Might be negative in a case the allocation deal direction is opposite to that of the 
! netted leg deal direction
!
!
LegSettlementCurrency     "LegSettlementCurrency"     675 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Identifies settlement currency for this Leg, e.g. Currency code of settlement denomination.
!
!
!
! 	Required for NDF Currency Pairs and must be presented in the terms of deliverable currency in
!  the pair.
!
!
LegIOIQty                 "LegIOIQty"                 682 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Required for multileg IOIs and for each leg. Leg-specific IOI quantity See IOIQty (27) for descri
! ption and valid values
!
NoLegStipulations         "NoLegStipulations"         683 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Number of leg stipulation entries
!
LegOrdQty                 "LegOrdQty"                 685 NULL         INTEGER            15  UINT              15
!
! Quantity of the individual leg
!
LegStipulationType        "LegStipulationType"        688 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Required if NoLegStipulations >0 For Fixed Income, type of Stipulation for this leg. See Stipulat
! ionType (233) for description and valid values
!
LegStipulationValue       "LegStipulationValue"       689 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! For Fixed Income, value of stipulation. See StipulationValue (234) for description and valid valu
! es
!
Pool                      "Pool"                      691 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Identifies MBS / ABS pool For Fixed Income, identifies MBS / ABS pool.
!
YieldRedemptionDate       "YieldRedemptionDate"       696 NULL         DATE               11  DATE                11
!
! Date to which the yield has been calculated (i.e. maturity, par call or current call, pre-refunde
! d date).
!
YieldRedemptionPrice      "YieldRedemptionPrice"      697 NULL         PRICE              17  REAL               5
!
! Price to which the yield has been calculated.
!
YieldRedemptionPriceType  "YieldRedemptionPriceType"  698 NULL         INTEGER            15  UINT               6
!
! The price type of the YieldRedemptionPrice (697). See PriceType (423) for description and valid v
! alues.
!
BenchmarkSecurityID       "BenchmarkSecurityID"       699 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! The identifier of the benchmark security, e.g. Treasury against Corporate bond. The identifier of
!  the benchmark security, e.g. Treasury against Corporate bond. See SecurityID (tag 48) for des
! cription and valid values.
!
YieldCalcDate             "YieldCalcDate"             701 NULL         DATE               11  DATE                11
!
! Include as needed to clarify yield irregularities associated with date, e.g. when it falls on a n
! on-business day.
!
NoUnderlyings             "NoUnderlyings"             711 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Number of underlyings Number of underlying legs that make up the security.
!
AllocSettlCurrency        "AllocSettlCurrency"        736 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Currency code of settlement denomination for a specific AllocAccount (79).
!
LegDatedDate              "LegDatedDate"              739 NULL         DATE               11  DATE                11
!
! The effective date of a new securities issue determined by its underwriters. Often but not always
!  the same as the Issue Date and the Interest Accrual Date
!
LegPool                   "LegPool"                   740 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Identifies MBS / ABS pool For Fixed Income, identifies MBS / ABS pool for a specific leg of a mul
! ti-leg instrument. See Pool (69) for description and valid values.
!
BenchmarkSecurityIDSource "BenchmarkSecurityIDSource" 761 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Source of BenchmarkSecurityID. If not specified, then ID Source is understood to be the same as t
! hat in the Instrument block. Identifies class or source of the BenchmarkSecurityID (699) value
! . Required if BenchmarkSecurityID is specified. Same values as the SecurityIDSource (22) field
!
SecuritySubType           "SecuritySubType"           762 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Sub-type qualification/identification of the SecurityType (e.g. for SecurityType="MLEG"). If spec
! ified, SecurityType is required. Sub-type qualification/identification of the SecurityType for
!  example:For SecurityType="REPO", then General = General CollateralFor SecurityType="MLEG", ma
! rkets can provide the name of the option or futures strategy, such as Calendar, Vertical, Butt
! erfly, etc.NOTE: Additional values may be used by mutual agreement of the counterparties
!
UnderlyingSecuritySubType "UnderlyingSecuritySubType" 763 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Underlying security’s SecuritySubType. See SecuritySubType (762) field for description
!
LegSecuritySubType        "LegSecuritySubType"        764 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! SecuritySubType of the leg instrument. See SecuritySubType (762) field for description
!
TerminationType           "TerminationType"           788 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! For Repos the timing or method for terminating the agreement. Type of financing termination.
!
NoPartySubIDs             "NoPartySubIDs"             802 NULL         INTEGER            15  UINT               6
!
! Number of repeating groups that contain unique combinations of PartySubID,
!PartySubIDType within
!  Parties repeating group.
!
!
!	Tags marked as ‘C’ [conditional] are required if NoPartySu
! bIDs if ≥ 1
!
!
PartySubIDType            "PartySubIDType"            803 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Type of PartySubID (523) value
!4200 - LEI (Legal Entity Identifier).
!
!
!	Only to be used if Pa
! rtyRole (Tag 452) is set to: 13, 17, 21, 73
!
!
!4204 - Clearing Exemption
!
!
!	Only to be us
! ed if PartyRole (Tag 452) is set to: 13 or 17
!
!
!4205 - Execution Venue Type
!
!
!	Only to b
! e used if PartyRole (Tag 452) is set to 73
!
!
UnderlyingPx              "UnderlyingPx"              810 NULL         PRICE              17  REAL               5
!
! Specific to the  (not in )
!In a financing deal clean price (percent-of-par or per unit) of the u
! nderlying security or basket. Underlying price associate with a derivative instrument.
!
TargetStrategy            "TargetStrategy"            847 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! The target strategy of the order
!
LastLiquidityInd          "LastLiquidityInd"          851 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! MIDBOOK:
!Indicator whether this fill was the result of a liquidity provider adding liquidity or 
! a liquidity taker taking liquidity. Applicable only for ExecType of 'Trade'.
!
QtyType                   "QtyType"                   854 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Type of quantity specified in a quantity field:
!
NoEvents                  "NoEvents"                  864 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Number of repeating EventType entries.
!
EventType                 "EventType"                 865 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Code to represent the type of event
!
EventDate                 "EventDate"                 866 NULL         DATE               11  DATE                11
!
! Date of event
!
EventPx                   "EventPx"                   867 NULL         PRICE              17  REAL               5
!
! Predetermined price of issue at event, if applicable
!
EventText                 "EventText"                 868 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Comments related to the event.
!
DatedDate                 "DatedDate"                 873 NULL         DATE               11  DATE                11
!
! If different from IssueDate The effective date of a new securities issue determined by its underw
! riters. Often but not always the same as the Issue Date and the Interest Accrual Date
!
InterestAccrualDate       "InterestAccrualDate"       874 NULL         DATE               11  DATE                11
!
! If different from IssueDate and DatedDate The start date used for calculating accrued interest on
!  debt instruments which are being sold between interest payment dates. Often but not always th
! e same as the Issue Date and the Dated Date
!
CPProgram                 "CPProgram"                 875 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! The program under which a commercial paper is issued The program under which a commercial paper i
! s issued
!
CPRegType                 "CPRegType"                 876 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! The registration type of a commercial paper issuance The registration type of a commercial paper 
! issuance
!
UnderlyingCPProgram       "UnderlyingCPProgram"       877 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! The program under which the underlying commercial paper is issued
!
UnderlyingCPRegType       "UnderlyingCPRegType"       878 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! The registration type of the underlying commercial paper issuance
!
UnderlyingQty             "UnderlyingQty"             879 NULL         INTEGER            15  UINT              15
!
! Specific to the  (not in )
!Unit amount of the underlying security (par, shares, currency, etc.) 
! Unit amount of the underlying security (par, shares, currency, etc.)
!
TrdMatchID                "TrdMatchID"                880 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Identifier assigned to a trade by a matching system.
!MATCHING:
!
!
!	&nbsp;Match Token allocated
!  by the Matching Engine
!	Also mapped into FIX tag 1003 (TradeID) within the Trade Confirmatio
! n Report (TCR) by TR.
!
!
UnderlyingDirtyPrice      "UnderlyingDirtyPrice"      882 NULL         PRICE              17  REAL               5
!
! Specific to the  (not in )
!In a financing deal price (percent-of-par or per unit) of the underly
! ing security or basket. "Dirty" means it includes accrued interest Price (percent-of-par or pe
! r unit) of the underlying security or basket. "Dirty" means it includes accrued interest
!
UnderlyingEndPrice        "UnderlyingEndPrice"        883 NULL         PRICE              17  REAL               5
!
! Specific to the  (not in )
!In a financing deal price (percent-of-par or per unit) of the underly
! ing security or basket at the end of the agreement. Price (percent-of-par or per unit) of the 
! underlying security or basket at the end of the agreement.
!
UnderlyingStartValue      "UnderlyingStartValue"      884 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Specific to the  (not in )
!Currency value attributed to this collateral at the start of the agre
! ement Currency value attributed to this collateral at the start of the agreement
!
UnderlyingCurrentValue    "UnderlyingCurrentValue"    885 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Specific to the  (not in )
!Currency value currently attributed to this collateral Currency value
!  currently attributed to this collateral
!
UnderlyingEndValue        "UnderlyingEndValue"        886 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Specific to the  (not in )
!Currency value attributed to this collateral at the end of the agreem
! ent Currency value attributed to this collateral at the end of the agreement
!
NoUnderlyingStips         "NoUnderlyingStips"         887 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Number of underlying stipulation entries
!
UnderlyingStipType        "UnderlyingStipType"        888 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Required if NoUnderlyingStips >0 Type of stipulation. Same values as StipulationType (233)
!
UnderlyingStipValue       "UnderlyingStipValue"       889 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Value of stipulation. Same values as StipulationValue (234)
!
MarginRatio               "MarginRatio"               898 NULL         PRICE              17  REAL               5
!
! Percentage of cash value that underlying security collateral must meet. The fraction of the cash 
! consideration that must be collateralized, expressed as a percent. A MarginRatio of 02% indica
! tes that the value of the collateral (after deducting for "haircut") must exceed the cash cons
! ideration by 2%.
!
AgreementDesc             "AgreementDesc"             913 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! The full name of the base standard agreement, annexes and amendments in place between the princip
! als and applicable to this deal The full name of the base standard agreement, annexes and amen
! dments in place between the principals applicable to a financing transaction.
!
AgreementID               "AgreementID"               914 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! A common reference to the applicable standing agreement between the principals A common reference
!  to the applicable standing agreement between the counterparties to a financing transaction.
!
AgreementDate             "AgreementDate"             915 NULL         DATE               11  DATE                11
!
! A reference to the date the underlying agreement was executed. A reference to the date the underl
! ying agreement specified by AgreementID and AgreementDesc was executed.
!
StartDate                 "StartDate"                 916 NULL         DATE               11  DATE                11
!
! Settlement date of the beginning of the deal Start date of a financing deal, i.e. the date the bu
! yer pays the seller cash and takes control of the collateral
!
EndDate                   "EndDate"                   917 NULL         DATE               11  DATE                11
!
! Repayment / repurchase date End date of a financing deal, i.e. the date the seller reimburses the
!  buyer and takes back control of the collateral
!
AgreementCurrency         "AgreementCurrency"         918 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Currency of the underlying agreement. Contractual currency forming the basis of a financing agree
! ment and associated transactions. Usually, but not always, the same as the trade currency.
!
DeliveryType              "DeliveryType"              919 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Delivery or custody arrangement for the underlying securities Identifies type of settlement
!
UnderlyingStrikeCurrency  "UnderlyingStrikeCurrency"  941 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Currency in which the strike price of an underlying instrument is denominated
!
LegStrikeCurrency         "LegStrikeCurrency"         942 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Currency in which the strike price of a instrument leg of a multileg instrument is denominated
!
StrikeCurrency            "StrikeCurrency"            947 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Used for derivatives Currency in which the StrikePrice is denominated.
!
LegContractSettlMonth     "LegContractSettlMonth"     955 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Specifies when the contract (i.e. MBS/TBA) will settle.
!
LegInterestAccrualDate    "LegInterestAccrualDate"    956 NULL         DATE               11  DATE                11
!
! The start date used for calculating accrued interest on debt instruments which are being sold bet
! ween interest payment dates. Often but not always the same as the Issue Date and the Dated Dat
! e
!
NoStrategyParameters      "NoStrategyParameters"      957 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Indicates number of strategy parameters
!
!
!	Tags marked as ‘C’ [conditional] in StrategyPar
! ametersGrp are required if the number of NoAllocs ≥ 1
!
!
StrategyParameterName     "StrategyParameterName"     958 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Name of parameter
!
StrategyParameterType     "StrategyParameterType"     959 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Datatype of the parameter
!
!Supported Values are as per FIX. Some values might not be supported 
! by this spec:
!
StrategyParameterValue    "StrategyParameterValue"    960 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Value of the parameter
!
SecurityStatus            "SecurityStatus"            965 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Gives the current state of the instrument Used for derivatives. Denotes the current state of the 
! Instrument.
!
SettleOnOpenFlag          "SettleOnOpenFlag"          966 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Indicator to determine if Instrument is Settle on Open. Indicator to determine if instrument is s
! ettle on open
!
StrikeMultiplier          "StrikeMultiplier"          967 NULL         INTEGER            15  UINT              15
!
! Used for derivatives. Multiplier applied to the strike price for the purpose of calculating the s
! ettlement value. Used for derivatives. Multiplier applied to the strike price for the purpose 
! of calculating the settlement value.
!
StrikeValue               "StrikeValue"               968 NULL         INTEGER            15  UINT              15
!
! Used for derivatives. The number of shares/units for the financial instrument involved in the opt
! ion trade. Used for derivatives. The number of shares/units for the financial instrument invol
! ved in the option trade.
!
MinPriceIncrement         "MinPriceIncrement"         969 NULL         INTEGER            15  UINT              15
!
! Minimum price increment for the instrument. Could also be used to represent tick value. Minimum p
! rice increase for a given exchange-traded Instrument. This field is not available in Autex IOI
! .
!
PositionLimit             "PositionLimit"             970 NULL         INTEGER            15  UINT               6
!
! Position Limit for the instrument. Position Limit for a given exchange-traded product. This field
!  is not available in Autex IOI.
!
NTPositionLimit           "NTPositionLimit"           971 NULL         INTEGER            15  UINT               6
!
! &nbsp;Near-term Position Limit for the instrument. Position Limit in the near-term contract for a
!  given exchange-traded product.&nbsp; This field is not available in Autex IOI.
!
UnderlyingAllocationPercent "UnderlyingAllocationPercent" 972 NULL         PRICE              17  REAL               5
!
! Specific to the < UnderlyingInstrument > Percent of the Strike Price that this underlying represe
! nts. Necessary for derivatives that deliver into more than one underlying instrument. Percent 
! of the Strike Price that this underlying represents.
!
UnderlyingCashAmount      "UnderlyingCashAmount"      973 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Specific to the < UnderlyingInstrument > Cash amount associated with the underlying component. Ne
! cessary for derivatives that deliver into more than one underlying instrument and one of the u
! nderlying's is a fixed cash value. Cash amount associated with the underlying component.
!
UnderlyingCashType        "UnderlyingCashType"        974 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Specific to the < UnderlyingInstrument > Used for derivatives that deliver into cash underlying. 
! Indicates that the cash is either fixed or difference value (difference between strike and cur
! rent underlying price) Used for derivatives that deliver into cash underlying.
!
UnderlyingSettlementType  "UnderlyingSettlementType"  975 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Specific to the < UnderlyingInstrument > Indicates order settlement period for the underlying del
! iverable component. Indicates order settlement period for the underlying instrument.
!
RndPx                     "RndPx"                     991 NULL         PRICE              17  REAL               5
!
! BankStream NDF only and specifies the Mid-Point of the quote, NDFs only, TOB FIX sessions
!The us
! e of this field does not conform to standard FIX. This field is used to better support FX trad
! ing.
!
UnitOfMeasure             "UnitOfMeasure"             996 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! The unit of measure of the underlying commodity upon which the contract is based. Two groups of u
! nits of measure enumerations are supported.
!
!	Fixed Magnitude UOMs are primarily used in ene
! rgy derivatives and specify a magnitude (such as, MM, Kilo, M, etc.) and the dimension (such a
! s, watt hours, BTU&#39;s) to produce standard fixed measures (such as MWh - Megawatt-hours, MM
! Btu - One million BTUs).
!	The second group, Variable Quantity UOMs, specifies the dimension a
! s a single unit without a magnitude (or more accurately a magnitude of one) and uses the UnitO
! fMeasureQty(1147) field to define the quantity of units per contract. Variable Quantity UOMs a
! re used for both commodities (such as lbs of lean cattle, bushels of corn, ounces of gold) and
!  financial futures.
!
!Examples:
!
!
!	For lean cattle futures contracts, a UnitOfMeasure of &
! #39;lbs&#39; with a UnitOfMeasureQty(1147) of 40,000, means each lean cattle futures contract 
! represents 40,000 lbs of lean cattle.
!	For Eurodollars futures contracts, a UnitOfMeasure of 
! USD with a UnitOfMeasureQty(1147) of 1,000,000, means a Eurodollar futures contract represents
!  1,000,000 USD.
!	For gold futures contracts, a UnitOfMeasure is oz_tr (Troy ounce) with a Uni
! tOfMeasureQty(1147) of 1,000, means each gold futures contract represents 1,000 troy ounces of
!  gold.
!
!
!This field is not available in Autex IOI.
!
TimeUnit                  "TimeUnit"                  997 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! .Used to indicate a time unit for the contract (e.g., days, weeks, months, etc.) Unit of time ass
! ociated with the contract. Additional values may be used by mutual agreement of the counterpar
! ties. This field is not available in Autex IOI.
!
UnderlyingUnitOfMeasure   "UnderlyingUnitOfMeasure"   998 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Refer to defintion of UnitOfMeasure(996)
!
LegUnitOfMeasure          "LegUnitOfMeasure"          999 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Refer to defintion of UnitOfMeasure(996)
!
UnderlyingTimeUnit        "UnderlyingTimeUnit"        1000 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Used to indicate a time unit for the contract (e.g., days, weeks, months, etc.) Same as TimeUnit.
!
LegTimeUnit               "LegTimeUnit"               1001 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Used to indicate a time unit for the contract (e.g., days, weeks, months, etc.) Same as TimeUnit.
!
LegOptionRatio            "LegOptionRatio"            1017 NULL         INTEGER            15  UINT              15
!
! LegOptionRatio is provided on covering leg to create a delta neutral spread. In Listed Derivative
! s, the delta of the leg is multiplied by LegOptionRatio and OrderQty to determine the covering
!  quantity. Expresses the risk of an option leg. Value must be between -1 and 1.A Call Option w
! ill require a ratio value between 0 and 1A Put Option will require a ratio value between -1 an
! d 0
!
NoInstrumentParties       "NoInstrumentParties"       1018 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Repeating group below should contain unique combinations of InstrumentPartyID, InstrumentPartyIDS
! ource, and InstrumentPartyRole Identifies the number of parties identified with an instrument
!
InstrumentPartyID         "InstrumentPartyID"         1019 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Used to identify party id related to instrument PartyID value within an instrument party repeatin
! g group. Same values as PartyID (448)
!
&nbsp;MDBookType          "&nbsp;MDBookType"          1021 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! 
!
MDEntrySpotRate           "MDEntrySpotRate"           1026 NULL         INTEGER            15  UINT              15
!
! BankStream NDF/FWD only and specifies the Mid-Point of the quote.
!
MDEntryForwardPoints      "MDEntryForwardPoints"      1027 NULL         PRICE              17  REAL               5
!
! BankStream&nbsp; NDF/FWD&nbsp; only&nbsp; and&nbsp; specifies&nbsp; the&nbsp; Quote&nbsp; forward
!  points
!
ExecAckStatus             "ExecAckStatus"             1036 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Indicates the status of the Execution Acknowledgement
!
UnderlyingCapValue        "UnderlyingCapValue"        1038 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Maximum notional value for a capped financial instrument
!
UnderlyingSettlMethod     "UnderlyingSettlMethod"     1039 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! 
!
UnderlyingAdjustedQuantity "UnderlyingAdjustedQuantity" 1044 NULL         INTEGER            15  UINT              15
!
! Specific to the  (not in ). For listed derivatives margin management, this is the number of share
! s adjusted for upcoming corporate action. Used only for securities which are optionable and ar
! e between ex-date and settlement date (4 days). Unit amount of the underlying security (shares
! ) adjusted for pending corporate action not yet allocated.
!
UnderlyingFXRate          "UnderlyingFXRate"          1045 NULL         INTEGER            15  UINT              15
!
! Specific to the  (not in ). Foreign exchange rate used to compute UnderlyingCurrentValue (885) (o
! r market value) from UnderlyingCurrency (318) to Currency (15). Foreign exchange rate used to 
! compute UnderlyingCurrentValue(885) (or market value) from UnderlyingCurrency(318) to Currency
! (15).
!
UnderlyingFXRateCalc      "UnderlyingFXRateCalc"      1046 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Specific to the  (not in ). Specified whether UnderlyingFxRate (1045) should be multiplied or div
! ided to derive UnderlyingCurrentValue (885). Specifies whether the UnderlyingFxRate(1045) shou
! ld be multiplied or divided.
!
InstrmtAssignmentMethod   "InstrmtAssignmentMethod"   1049 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Method under which assignment was conducted
!
InstrumentPartyIDSource   "InstrumentPartyIDSource"   1050 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Used to identify source of instrument party id PartyIDSource value within an instrument partyrepe
! ating group. Same values as PartyIDSource (447)
!
InstrumentPartyRole       "InstrumentPartyRole"       1051 NULL         INTEGER            15  UINT               6
!
! Used to identify the role of instrument party id PartyRole value within an instrument partyepeati
! ng group. Same values as PartyRole (452)
!
NoInstrumentPartySubIDs   "NoInstrumentPartySubIDs"   1052 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Number of InstrumentPartySubID (1053) and InstrumentPartySubIDType (1054) entries
!
InstrumentPartySubID      "InstrumentPartySubID"      1053 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! PartySubID value within an instrument party repeating group. Same values as PartySubID (523)
!
InstrumentPartySubIDType  "InstrumentPartySubIDType"  1054 NULL         INTEGER            15  UINT               6
!
! Type of InstrumentPartySubID (1053) value. Same values as PartySubIDType (803)
!
CalculatedCcyLastQty      "CalculatedCcyLastQty"      1056 NULL         INTEGER            15  UINT              15
!
! Quantity of the other side of the currency trade. Can be derived from LastQty and
!
!LastPx.
!
!

! !	
!	Not required for FXSWAP orders
!	
!	
!	For FXSWAPS indicates the size of the near leg of 
! the swap as measured in units
!	
!	
!	of the second currency.
!	
!	
!	If present, shall be ign
! ored. Refer to the LegCalculatedCcyLastQty (Tag 1074) for the calculated quantities of the oth
! er side of the currency pair for the near/far legs.
!	
!	
!	Can be derived from LegQty and Leg
! LastPx.
!	
!	
!	Required if ExecType = F (fill or partial fill).
!	
!
!
!This Tag was added in
!  the IX.4.4 EP21
!
AggressorIndicator       "Aggressor Indicator"       1057 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Used to identify whether the order initiator is an aggressor or not in the trade.
!OB Only:
!Used
!  to identify whether the order initiator is an aggressor or not in the trade.
!
!
!	This Tag w
! as added in the FIX.4.4 EP21
!
!
NoUndlyInstrumentParties  "NoUndlyInstrumentParties"  1058 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Repeating group below should contain unique combinations of InstrumentPartyID, InstrumentPartyIDS
! ource, and InstrumentPartyRole Identifies the number of parties identified with an underlying 
! instrument
!
UnderlyingInstrumentPartyID "UnderlyingInstrumentPartyID" 1059 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Used to identify party id related to instrument PartyID value within an underlying instrument par
! ty repeating group. Same values as PartyID (448)
!
UnderlyingInstrumentPartyIDSource "UnderlyingInstrumentPartyIDSource" 1060 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Used to identify source of instrument party id PartyIDSource value within an underlying instrumen
! t party repeating group. Same values as PartyIDSource (447)
!
UnderlyingInstrumentPartyRole "UnderlyingInstrumentPartyRole" 1061 NULL         INTEGER            15  UINT               6
!
! Used to identify the role of instrument party id PartyRole value within an underlying instrument 
! party repeating group. Same values as PartyRole (452)
!
NoUndlyInstrumentPartySubIDs "NoUndlyInstrumentPartySubIDs" 1062 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Number of Underlying InstrumentPartySubID (1053) and InstrumentPartySubIDType (1054) entries
!
UnderlyingInstrumentPartySubID "UnderlyingInstrumentPartySubID" 1063 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! PartySubID value within an underlying instrument party repeating group. Same values as PartySubID
!  (523)
!
UnderlyingInstrumentPartySubIDType "UnderlyingInstrumentPartySubIDType" 1064 NULL         INTEGER            15  UINT               6
!
! Type of underlying InstrumentPartySubID (1053) value. Same values as PartySubIDType (803)
!
LastSwapPoints            "LastSwapPoints"            1071 NULL         PRICE              17  REAL               5
!
! P { margin-bottom: 0.21cm; }
!
!
!
!Used to express the swap points
!for the swap trade event
!
!
! 
!	Conditionally required for
!	SWAPS trades
!
!
!
!This Tag was added in the IX.4.4 EP21     
!                                                                                               
!                                                                                              
!
LegForwardPoints          "LegForwardPoints"          1073 NULL         PRICE              17  REAL               5
!
! FX forward points which have been added to LastSpotRate for this leg
!
!
!	&nbsp;May be a negativ
! e value.
!	&nbsp;Not required if the leg is FXSPOT.
!
!
LegCalculatedCcyLastQty   "LegCalculatedCcyLastQty"   1074 NULL         INTEGER            15  UINT              15
!
! Calculated quantity of the other side of the currency for the individual leg, e.g. Contra Amount 
! of the leg expressed for the Currency not specified in the Tag 556
!
!
!	Can be derived from L
! egQty and LegLastPx.
!	Required if ExecType = F (Fill or partial fill).
!
!
!MATCHING: 
!
!Req
! uired for Swap.
!
!Represents the calculated quantity of the quoted currency for this leg. The
!  calculation shall be performed by the MFG:
!
!
!	When PriceType = 20 this value can be derive
! d from: [LegOrderQty * LegLastPx] * ContractMultiplier (1,000,000).
!	When PriceType = 21 this
!  value can be derived from: [LegOrderQty /LegLastPx]* ContractMultiplier (1,000,000).
!	Import
! ant – MFG will round down and remove all decimal places and only use whole numbers for the g
! iven contra ccy.
!
!
MaturityTime              "MaturityTime"              1079 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! For NDFs this represents the fixing time of the contract. It is optional to specify the fixing ti
! me. Time of security's maturity expressed in local time with offset to UTC specified
!
TriggerType               "TriggerType"               1100 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Defines when the trigger will hit, i.e. the action specified by the trigger instructions will com
! e into effect.
!Refer to the User Guide for the reference how the value shall be populated in 
! this tag
!This Tag was added in the FIX.5.0 EP-1. The use of this field does not conform to st
! andard FIX. This field is used to better support FX trading.
!
TriggerAction             "TriggerAction"             1101 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Defines the type of action to take when the trigger hits.Refer to the User Guide for the referenc
! e how the value shall be populated in this tag.This Tag was added in the FIX.5.0 EP-1. The use
!  of this field does not conform to standard FIX. This field is used to better support FX tradi
! ng.
!
ApplVerID                 "ApplVerID"                 1128 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Indicates application version using a service pack identifier. The ApplVerID applies to a specifi
! c message occurrence. Specifies the service pack release being applied at message level. Enume
! rated field with values assigned at time of service pack release
!
CstmApplVerID             "CstmApplVerID"             1129 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Used to support bilaterally agreed custom functionality Specifies a custom extension to a message
!  being applied at the message level. Enumerated field
!
DisplayQty                "DisplayQty"                1138 NULL         INTEGER            15  UINT              15
!
! Maximum quantity of Currency (tag 15) to be shown for this order.
!
!
!	&nbsp;If this tag value i
! s 0, the order will be a hidden order. If this tag is&nbsp; omitted, the full quantity of the 
! order will be shown.
!
!
!MIDBOOK:
!Used to denote reserve orders.
!MATCHING:
!
!
!	&nbsp;Appl
! icable to FXSPOT only on TRM.
!	&nbsp;Always specified in millions
!	&nbsp;If DisplayQty &lt; 
! OrderQty then Matching Quantity = DisplayQty and&nbsp; Matching MoreQuantity = OrderQty - Disp
! layQty. Otherwise Matching&nbsp; Quantity = OrderQty
!
!
!This Tag replaces Tags 111 and 210 w
! hich are depreciated effective FIX 5.0.
!
EventTime                 "EventTime"                 1145 NULL         DATE                5  DATE                 5
!
! Specific time of event. To be used in combination with EventDate [866] Specific time of event. To
!  be used in combination with EventDate [866]
!
MinPriceIncrementAmount   "MinPriceIncrementAmount"   1146 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! &nbsp;Minimum price increment amount associated with the MinPriceIncrement [969]. For listed deri
! vatives, the value can be calculated by multiplying MinPriceIncrement by ContractValueFactor [
! 231] Minimum price increment amount associated with the MinPriceIncrement ( tag 969). For list
! ed derivatives, the value can be calculated by multiplying MinPriceIncrement by ContractValueF
! actor(231).&nbsp; This field is not available in Autex IOI.
!
UnitOfMeasureQty          "UnitOfMeasureQty"          1147 NULL         INTEGER            15  UINT              15
!
! &nbsp;Used to indicate the quantity of the underlying commodity unit of measure on which the cont
! ract is based, such as, 2500 lbs of lean cattle, 1000 barrels of crude oil, 1000 bushels of co
! rn, etc. UnitOfMeasureQty is required for UnitOfMeasure(996) Variable Quantity UOMs enumeratio
! ns. Refer to the definition of UnitOfMeasure(996) for more information on the use of UnitOfMea
! sureQty.&nbsp; This field is not available in Autex IOI.
!
SecurityGroup             "SecurityGroup"             1151 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! An exchange specific name assigned to a group of related securities which may be concurrently aff
! ected by market events and actions. An exchange specific name assigned to a group of related s
! ecurities which may be concurrently affected by market events and actions.
!
ApplExtID                 "ApplExtID"                 1156 NULL         INTEGER            15  UINT               6
!
! The extension pack number associated with an application message.
!
SecurityXMLLen            "SecurityXMLLen"            1184 NULL         INTEGER            15  UINT               6
!
! Must be set if SecurityXML field is specified and must immediately precede it. Lenght of the Secu
! rityXML data block.
!
SecurityXML               "SecurityXML"               1185 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! XML payload or content describing the Security information. Actual XML data stream describing a s
! ecurity, normally FpML.
!
SecurityXMLSchema         "SecurityXMLSchema"         1186 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! XML Schema used to validate the XML used to describe the Security. The schema used to validate th
! e contents of SecurityXML
!
PriceUnitOfMeasure        "PriceUnitOfMeasure"        1191 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Used to express the UOM of the price if different from the contract. In futures, this can be diff
! erent for cross-rate products in which the price is quoted in units differently from the contr
! act. This field is not available in Autex IOI.
!
PriceUnitOfMeasureQty     "PriceUnitOfMeasureQty"     1192 NULL         INTEGER            15  UINT              15
!
! Used to express the UOM Quantity of the price if different from the contract. In futures, this ca
! n be different for physically delivered products in which price is quoted in a unit size diffe
! rent from the contract, i.e. a Cattle Future contract has a UOMQty of 40,000 and a PriceUOMQty
!  of 100. &nbsp;This field is not available in Autex IOI.
!
SettlMethod               "SettlMethod"               1193 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Settlement method for a contract. Can be used as an alternative to CFI Code value Settlement meth
! od for a contract. Can be used as an alternative to CFI Code value.&nbsp;This field is not ava
! ilable in Autex IOI.
!
ExerciseStyle             "ExerciseStyle"             1194 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Type of exercise of a derivatives security Type of exercise of a derivatives security.&nbsp;This 
! field is not available in Autex IOI.
!
OptPayoutAmount           "OptPayoutAmount"           1195 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! &nbsp;Cash amount indicating the pay out associated with an option. For binary options this is a 
! fixed amount Cash amount indicating the pay out associated with an option. For binary options 
! this is a fixed amount. Conditionally required if OptPayoutType(1482) is set to binary.&nbsp;&
! nbsp;This field is not available in Autex IOI.
!
PriceQuoteMethod          "PriceQuoteMethod"          1196 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Method for price quotation Method for price quotation.&nbsp;This field is not available in Autex 
! IOI.
!
ValuationMethod           "ValuationMethod"           1197 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! &nbsp;Indicates type of valuation method used. Specifies the type of valuation method applied. Th
! is field is not available in Autex IOI.
!
ListMethod                "ListMethod"                1198 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Indicates whether the instruments are pre-listed only or can also be defined via user request Ind
! icates whether instruments are pre-listed only or can also be defined via user request.&nbsp;T
! his field is not available in Autex IOI.
!
CapPrice                  "CapPrice"                  1199 NULL         PRICE              17  REAL               5
!
! Used to express the ceiling price of a capped call Used to express the ceiling price of a capped 
! call.&nbsp;This field is not available in Autex IOI.
!
FloorPrice                "FloorPrice"                1200 NULL         PRICE              17  REAL               5
!
! Used to express the floor price of a capped put Used to express the floor price of a capped put.&
! nbsp;This field is not available in Autex IOI.
!
LegMaturityTime           "LegMaturityTime"           1212 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Leg’s Time of security's maturity expressed in local time with offset to UTC specified.
!
!This
!  Tag was added in the FIX.5.0 EP41
!
UnderlyingMaturityTime    "UnderlyingMaturityTime"    1213 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Time of security's maturity expressed in local time with offset to UTC specified
!
LegUnitOfMeasureQty       "LegUnitOfMeasureQty"       1224 NULL         INTEGER            15  UINT              15
!
! Refer to definition of UnitOfMeasureQty(1147)
!
ProductComplex            "ProductComplex"            1227 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Identifies an entire suite of products for a given market. In Futures this may be "interest rates
! ", "agricultural", "equity indexes", etc Identifies an entire suite of products for a given ma
! rket. In Futures this may be "interest rates", "agricultural", "equity indexes", etc.
!
FlexProductEligibilityIndicator "FlexProductEligibilityIndicator" 1242 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Used to indicate if a product or group of product supports the creation of flexible securities Us
! ed to indicate if a product or group of product supports the creation of flexible securities. 
! This field is not available in Autex IOI.
!
FlexibleIndicator         "FlexibleIndicator"         1244 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! &nbsp;Used to indicate if a security has been defined as flexible according to &quot;non-standard
! &quot; means. Analog to CFICode Standard/Non-standard indicator Used to indicate a derivatives
!  security that can be defined using flexible terms. The terms commonly permitted to be defined
!  by market participants are expiration date and strike price. FlexibleIndicator is an alternat
! ive CFICode(461) Standard/Non-standard attribute. This field is not available in Autex IOI.
!
MarketSegmenID            "MarketSegmenID"            1300 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Identifies the segment of the market to which specify trading rules and listing rules apply.
!Str
! ing to consist of pipe delaminated DEALING CODES of the providers banks, e.g.‘BANX|CITL|JPML
! ’
!The use of this field does not conform to standard FIX. This field is used to better supp
! ort FX trading.
!
MarketID                  "MarketID"                  1301 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Number of Market Segments on which a security may trade.
!
!The use of this field does not confor
! m to standard FIX. This field is used to better support FX trading.
!
NoMarketSegments          "NoMarketSegments"          1310 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Number of Market Segments on which a security may trade.
!
!The use of this field does not confor
! m to standard FIX. This field is used to better support FX trading.
!
LegPutOrCall              "LegPutOrCall"              1358 NULL         INTEGER            15  UINT               6
!
! Used to express option right Refer to definition of PutOrCall(201)
!
LegAllocfID               "LegAllocfID"               1366 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! The AllocID of this individual leg.
!
!
!	&nbsp;Not required if all the allocations are part of t
! he same message
!
!
!This Tag was added in the FIX.5.0 EP58
!
LegAllocSettlCurrency     "LegAllocSettlCurrency"     1367 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Identifies settlement currency for the underlying account within this leg.
!
!
!	If present, over
! write the value in the 675
!
!
!This Tag was added in the FIX.5.0 EP58
!
LegExecInst               "LegExecInst"               1384 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Instructions for order handling on exchange trading floor.
!If more than one instruction is appli
! cable to an order, this field can contain multiple instructions separated by space.
!This Tag 
! was added in the FIX.5.0EP59&nbsp;
!
ContingencyType           "ContingencyType"           1385 NULL         INTEGER            15  UINT               6
!
! Conditionally required if originally specified on order and echoed from the original order
!
!
!	
! For I-Deal represents the ContingencyType that was initially contingency order.
!
!
!This Tag 
! was added in the FIX.5.0 EP60
!
LegLastQty                "LegLastQty"                1418 NULL         INTEGER            15  UINT              15
!
! Fill quantity for this legRequired if ExecType = F (fill or partial fill)
!
UnderlyingExerciseStyle   "UnderlyingExerciseStyle"   1419 NULL         INTEGER            15  UINT               6
!
! Type of exercise of a derivatives security
!
LegExerciseStyle          "LegExerciseStyle"          1420 NULL         INTEGER            15  UINT               6
!
! Type of exercise of a derivatives security
!
LegPriceUnitOfMeasure     "LegPriceUnitOfMeasure"     1421 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Refer to definition for PriceUnitOfMeasure(1191)
!
LegPriceUnitOfMeasureQty  "LegPriceUnitOfMeasureQty"  1422 NULL         INTEGER            15  UINT              15
!
! Refer to definition of PriceUnitOfMeasureQty(1192)
!
UnderlyingUnitOfMeasureQty "UnderlyingUnitOfMeasureQty" 1423 NULL         INTEGER            15  UINT              15
!
! Refer to definition of UnitOfMeasureQty(1147)
!
UnderlyingPriceUnitOfMeasure "UnderlyingPriceUnitOfMeasure" 1424 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Refer to definition for PriceUnitOfMeasure(1191)
!
UnderlyingPriceUnitOfMeasureQty "UnderlyingPriceUnitOfMeasureQty" 1425 NULL         INTEGER            15  UINT              15
!
! Refer to definition of PriceUnitOfMeasureQty(1192)
!
ContractMultiplierUnit    "ContractMultiplierUnit"    1435 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! &nbsp; Indicates the type of multiplier being applied to the contract. Can be optionally used to 
! further define what unit ContractMultiplier(tag 231) is expressed in. This field is not availa
! ble in Autex IOI.
!
LegContractMultiplierUnit "LegContractMultiplierUnit" 1436 NULL         INTEGER            15  UINT               6
!
! "Indicates the type of multiplier being applied to the contract. Can be optionally used to furthe
! r define what unit LegContractMultiplier(tag 614) is expressed in.
!
UnderlyingContractMultiplierUnit "UnderlyingContractMultiplierUnit" 1437 NULL         INTEGER            15  UINT               6
!
! Indicates the type of multiplier being applied to the contract. Can be optionally used to further
!  define what unit UndlyContractMultiplier(tag 436) is expressed in.
!
FlowScheduleType          "FlowScheduleType"          1439 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! &nbsp;The industry standard flow schedule by which electricity or natural gas is traded. Schedule
! s exist by regions and on-peak and off-peak status, such as &quot;Western Peak&quot;. This fie
! ld is not available in Autex IOI.
!
LegFlowScheduleType       "LegFlowScheduleType"       1440 NULL         INTEGER            15  UINT               6
!
! The industry standard flow schedule by which electricity or natural gas is traded. Schedules exis
! t by regions and on-peak and off-peak status, such as "Western Peak".
!
UnderlyingFlowScheduleType "UnderlyingFlowScheduleType" 1441 NULL         INTEGER            15  UINT               6
!
! The industry standard flow schedule by which electricity or natural gas is traded. Schedules exis
! t by regions and on-peak and off-peak status, such as "Western Peak".
!
RestructuringType         "RestructuringType"         1449 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! A category of CDS credit even in which the underlying bond experiences a restructuring. Used to d
! efine a CDS instrument.
!
Seniority                 "Seniority"                 1450 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Specifies which issue (underlying bond) will receive payment priority in the event of a default. 
! Used to define a CDS instrument.
!
NotionalPercentageOutstanding "NotionalPercentageOutstanding" 1451 NULL         PRICE              17  REAL               5
!
! Indicates the notional percentage of the deal that is still outstanding based on the remaining co
! mponents of the index. Used to calculate the true value of a CDS trade or position.
!
OriginalNotionalPercentageOutstanding "OriginalNotionalPercentageOutstanding" 1452 NULL         PRICE              17  REAL               5
!
! Used to reflect the Original value prior to the application of a credit event. See NotionalPercen
! tageOutstanding(1451).
!
UnderlyingRestructuringType "UnderlyingRestructuringType" 1453 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! See RestructuringType(1449)
!
UnderlyingSeniority       "UnderlyingSeniority"       1454 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! See Seniority(1450)
!
UnderlyingNotionalPercentageOutstanding "UnderlyingNotionalPercentageOutstanding" 1455 NULL         PRICE              17  REAL               5
!
! See NotionalPercentageOutstanding(1451)
!
UnderlyingOriginalNotionalPercentageOutstanding "UnderlyingOriginalNotionalPercentageOutstanding" 1456 NULL         PRICE              17  REAL               5
!
! See OriginalNotionalPercentageOutstanding(1452)
!
AttachmentPoint           "AttachmentPoint"           1457 NULL         PRICE              17  REAL               5
!
! Lower bound percentage of the loss that the tranche can endure.
!
DetachmentPoint           "DetachmentPoint"           1458 NULL         PRICE              17  REAL               5
!
! Upper bound percentage of the loss the tranche can endure.
!
UnderlyingAttachmentPoint "UnderlyingAttachmentPoint" 1459 NULL         PRICE              17  REAL               5
!
! See AttachmentPoint(1457).
!
UnderlyingDetachmentPoint "UnderlyingDetachmentPoint" 1460 NULL         PRICE              17  REAL               5
!
! See DetachmentPoint(1458).
!
StrikePriceDeterminationMethod "StrikePriceDeterminationMethod" 1478 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Specifies how the strike price is determined at the point of option exercise. The strike may be f
! ixed throughout the life of the option, set at expiration to the value of the underlying, set 
! to the average value of the underlying , or set to the optimal value of the underlying. Condit
! ionally, required if value is other than "fixed".
!
StrikePriceBoundaryMethod "StrikePriceBoundaryMethod" 1479 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Specifies the boundary condition to be used for the strike price relative to the underlying price
!  at the point of option exercise.
!
StrikePriceBoundaryPrecision "StrikePriceBoundaryPrecision" 1480 NULL         PRICE              17  REAL               5
!
! Used in combination with StrikePriceBoundaryMethod to specify the percentage of the strike price 
! in relation to the underlying price. The percentage is generally 100 or greater for puts and 1
! 00 or less for calls.
!
UnderlyingPriceDeterminationMethod "UnderlyingPriceDeterminationMethod" 1481 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Specifies how the underlying price is determined at the point of option exercise. The underlying 
! price may be set to the current settlement price, set to a special reference, set to the optim
! al value of the underlying during the defined period ("Look-back") or set to the average value
!  of the underlying during the defined period ("Asian option").
!
OptPayoutType             "OptPayoutType"             1482 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! &nbsp;Indicates the type of payout that will result from an in-the-money option.&nbsp; This field
!  is not available in Autex IOI.
!
NoComplexEvents           "NoComplexEvents"           1483 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Number of complex events Number of complex event occurrences.
!
ComplexEventType          "ComplexEventType"          1484 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Identifies the type of complex event. 
!Required if NoComplexEvents > 0.
! Identifies the type of
!  complex event.
!
ComplexOptPayoutAmount    "ComplexOptPayoutAmount"    1485 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Cash amount indicating the pay out associated with an event. For binary options this is a fixed a
! mount.
!
ComplexEventPrice         "ComplexEventPrice"         1486 NULL         PRICE              17  REAL               5
!
! Specifies the price at which the complex event takes effect. Impact of the event price is determi
! ned by the ComplexEventType(1484).
!
ComplexEventPriceBoundaryMethod "ComplexEventPriceBoundaryMethod" 1487 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Specifies the boundary condition to be used for the event price relative to the underlying price 
! at the point the complex event outcome takes effect as determined by the ComplexEventPriceTime
! Type.
!
ComplexEventPriceBoundaryPrecision "ComplexEventPriceBoundaryPrecision" 1488 NULL         PRICE              17  REAL               5
!
! Used in combination with ComplexEventPriceBoundaryMethod to specify the percentage of the strike 
! price in relation to the underlying price. The percentage is generally 100 or greater for puts
!  and 100 or less for calls.
!
ComplexEventPriceTimeType "ComplexEventPriceTimeType" 1489 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Specifies when the complex event outcome takes effect. The outcome of a complex event is a payout
!  or barrier action as specified by the ComplexEventType.
!
ComplexEventCondition     "ComplexEventCondition"     1490 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! ComplexEventCondition is conditionally required when there are more than one ComplexEvent occurre
! nces. A chain of ComplexEvents must be linked together through use of the ComplexEventConditio
! n in which the relationship between any two events is described. For any two ComplexEvents the
!  first occurrence will specify the ComplexEventCondition which links it with the second event.
!  Specifies the condition between complex events when more than one event is specified. Multipl
! e barrier events would use an "or" condition since only one can be effective at a given time. 
! A set of digital range events would use an "and" condition since both conditions must be in ef
! fect for a payout to result.
!
NoComplexEventDates       "NoComplexEventDates"       1491 NULL         ALPHANUMERIC         0  FIELD_LIST           0
!
! Number of complex event date occurrences for a given complex event. Number of complex event date 
! occurrences for a given complex event.
!
ComplexEventStartDate     "ComplexEventStartDate"     1492 NULL         DATE                5  DATE                 5
!
! Required if NoComplexEventDates(1491) > 0. Specifies the start date of the date range on which a 
! complex event is effective. The start date will be set equal to the end date for single day ev
! ents such as Bermuda options. ComplexEventStartDate must always be less than or equal to Compl
! exEventEndDate.
!
ComplexEventEndDate       "ComplexEventEndDate"       1493 NULL         DATE                5  DATE                 5
!
! Required if NoComplexEventDates(1491) > 0. Specifies the end date of the date range on which a co
! mplex event is effective. The start date will be set equal to the end date for single day even
! ts such as Bermuda options. ComplexEventEndDate must always be greater than or equal to Comple
! xEventStartDate.
!
NoComplexEventTimes       "NoComplexEventTimes"       1494 NULL         ALPHANUMERIC          0  FIELD_LIST           0
!
! Number of complex event time occurrences for a given complex event date. The default in case of a
! n absence of time fields is 00:00:00-23:59:59.
!
ComplexEventStartTime     "ComplexEventStartTime"     1495 NULL         TIME                5  TIME                 5
!
! Required if NoComplexEventTimes(1494) > 0. Specifies the start time of the time range on which a 
! complex event date is effective. ComplexEventStartTime must always be less than or equal to Co
! mplexEventEndTime.
!
ComplexEventEndTime       "ComplexEventEndTime"       1496 NULL         TIME                5  TIME                 5
!
! Required if NoComplexEventTimes(1494) > 0. Specifies the end time of the time range on which a co
! mplex event date is effective. ComplexEventEndTime must always be greater than or equal to Com
! plexEventStartTime.
!
TriggerScope              "TriggerScope"              1628 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Refer to the User Guide for the reference how the value shall be populated in this tag.
!
!This i
! s a non-standard FIX field used by Thomson Reuters to better support FX trading.
!
ExposureDuration          "ExposureDuration"          1629 NULL         INTEGER            15  UINT               6
!
! The time duration of the order in seconds. The order will expire when the specified number of sec
! onds has elapsed. The clock starts when the order is poisoned in the matching order book.
!Req
! uired for orders where TIF tag 59 = "A”.
!
!
!	Min value = 30 seconds
!	Max value = 64799 se
! conds
!
!
!This is a non-standard FIX field used by Thomson Reuters to better support FX tradi
! ng.
!
BlockConnect              "BlockConnect"              5602 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Indicates messages was generated from BlockConnect.
!
SmartIOIFlag              "SmartIOIFlag"              5610 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Indicates "Smart" IOI or not.
!
Currency1                 "Currency1"                 7100 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! ISO Currency code indicating the first currency in the currency pair represented by Symbol. For i
! nstance for “EUR/JPY” Currency1 is “EUR”.This is a non-standard FIX field used by Thom
! son Reuters to better support FX trading.
!
!
Currency2                 "Currency2"                 7101 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! ISO Currency code indicating the second currency in the currency pair represented by Symbol. For 
! instance for “EUR/JPY” Currency2 is “JPY”.
!
!This is a non-standard FIX field used by
!  Thomson Reuters to better support FX trading.
!
DaysToSpot                "DaysToSpot"                7102 NULL         INTEGER            15  UINT               6
!
! Integer value representing the number of days until spot settlement for the Symbol specified. Thi
! s is measured from the current trade date as determined at the time the Security Definition me
! ssage is generated.
!
!This is a non-standard FIX field used by Thomson Reuters to better supp
! ort FX trading.
!
BasisPoint&nbsp;          "BasisPoint&nbsp;"          7103 NULL         INTEGER            15  UINT               6
!
! Integer value representing the decimal position of one point, or pip used to deal in the currency
! . For instance for EUR/JPY a point (pip) is represented by decimal place 2, whereas for EUR/GB
! P a pip is
!represented at decimal place 4.
!
!This is a non-standard FIX field used by Thomso
! n Reuters to better support FX trading.
!
RatePrecision             "RatePrecision"             7104 NULL         INTEGER            15  UINT               6
!
! Integer value representing the highest decimal precision used to show prevailing prices in the cu
! rrency pair specified by Symbol. For instance for is typically 2, whereas for EUR/GBP the rate
!  precision is typically 5.
!
!This is a non-standard FIX field used by Thomson Reuters to bett
! er support FX trading.
!
RateTerm                  "RateTerm"                  7105 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! ISO Currency code indicating the currency in terms of which the price for Proprietary and Confide
! ntial the currency pair represented by Symbol is expressed. For instance for “EUR/JPY” Rat
! eTerm is “JPY”.
!
!This is a non-standard FIX field used by Thomson Reuters to better supp
! ort FX trading.
!
Currency1AmtDecimals      "Currency1AmtDecimals"      7106 NULL         INTEGER            15  UINT               6
!
! Integer value representing the decimal precision with which the quantity of Currency1 will be mea
! sured for executions in the currency pair specified by Symbol. This is typically 2.
!
!This is
!  a non-standard FIX field used by Thomson Reuters to better support FX trading.
!
Currency2AmtDecimals      "Currency2AmtDecimals"      7107 NULL         INTEGER            15  UINT               6
!
! Integer value representing the decimal precision with which the quantity of Currency2 will be mea
! sured for executions in the currency pair specified by Symbol. This is typically 2.
!
!This is
!  a non-standard FIX field used by Thomson Reuters to better support FX trading.
!
ReferenceID               "ReferenceID"               7108 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! OB:
!This is an alpha-numeric value that should not exceed 16 characters. If present this value w
! ill be copied to tag 282 – MDOriginator on the market&nbsp; data incremental refresh as docu
! mented in that messages specification.
!This is a non-standard FIX field used by Thomson Reute
! rs to better support FX trading.
!
ActionableFlag            "ActionableFlag"            11001 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Indicates actionable IOI
!
PrimaryRic                "PrimaryRic"                11048 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Primary Thomson Reuters Instrument code for this interest message
!
RoutingInformation        "RoutingInformation"        12001 NULL         ALPHANUMERIC        5  ASCII_STRING         5
!
! Bitmask representing the destinations that this indication should be routed to.
!
IndexType                 "IndexType"                 12002 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Identifies query type:"SYMBOL" - Symbol in SecurityID"COMPID" - Sender in OnBehalfOfCompID"SUBID"
!  - Sender in OnBehalfOfSubID"RECEIVER" - (Reserved)
!
AutexCompId               "AutexCompId"               12003 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Autex on behalf of Id
!
AutexSubId                "AutexSubId"                12004 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Autex on behalf of sub id
!
AutexAcronym              "AutexAcronym"              12005 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Autex Comp Id
!
AutexFirmName             "AutexFirmName"             12006 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! 
!
AutexBrokerVol            "AutexBrokerVol"            12007 NULL         PRICE              17  REAL               5
!
! Calculated volume for this Autex Broker
!
AllocSide                 "AllocSide"                 30229 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Specify direction of the trade in the underlying account.
!This is a non-standard FIX field used 
! by Thomson Reuters to better support FX trading.
!
AllocQtyContra            "AllocQtyContra"            30230 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Calculated quantity of the other side of the currency for this underlying account,
!e.g. Contra A
! mount expressed for the Currency not specified in the Tag 15
!
!
!	Required if ExecType = F (f
! ill or partial fill).
!
!
!This is a non-standard FIX field used by FXall Trading Inc. to bett
! er support FX trading.
!
AcctLEI                   "AcctLEI"                   30231 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Legal Entity Identifier the underlying account within specific NoAllocs (78)
!repeating group.
!

! !
!	Not required for FXSPOT trades
!
!
!This is a non-standard FIX field used by FXall Trading
!  Inc. to better support FX trading.
!
LegAllocQtyContra         "LegAllocQtyContra"         30239 NULL         INTEGER            15  UINT              15
!
! Allocation Contra Amount for the underlying account within specific NoLegAllocs(670) repeating gr
! oup.
!
!
!	Expressed as measured in the second currency (i.e. the currency not indicatedas a C
! urrency in the Tag 30252).
!	Required if ExecType = F (Fill or partial fill).
!
!
!This is a n
! on-standard FIX field used by FXall Trading Inc. to better support FX trading.
!
RoutingInst               "RoutingInst"               30271 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Additional Routing Instruction.
!String to consist of pipe delaminated DEALING CODES of the provi
! ders banks, e.g. ‘BANX|CITL|JPML’
!
LegAllocSide              "LegAllocSide"              30273 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Specify direction of the trade in the underlying account within this leg.
!
LegAcctLEI                "LegAcctLEI"                30274 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Legal Entity Identifier the underlying account for this leg.
!The use of this field does not conf
! orm to standard FIX. This field is used to better support FX trading.
!
LegLeaveQty               "LegLeaveQty"               30275 NULL         INTEGER            15  UINT              15
!
! Quantity open for further execution for the individual leg specified in terms of
!LegCurrency (Ta
! g 556).
!
!
!	If the OrdStatus (39) is Canceled, DoneForTheDay, Expired, Calculated, or Reject
! ed (in which case the order is no longer active) then LegLeaveQty could be 0.
!
!
!This is a n
! on-standard FIX field used by FXall Trading Inc. to better support FX trading.
!
LegCumQty                 "LegCumQty"                 30276 NULL         INTEGER            15  UINT              15
!
! Currently executed amount for the overall order for the individual leg specified in terms of LegC
! urrency (Tag 556).
!This is a non-standard FIX field used by FXall Trading Inc. to better supp
! ort FX trading.
!
USDReferenceSymbol        "USDReferenceSymbol"        30277 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! For trades performed in cross currency pairs, i.e. non-USD denominated currencies such as EUR/JPY
!  and GBP/CHF, this field contains the currency pair used to supply the rate in the USDReferenc
! eSpotRate field (Tag 30278) for the individual leg. For instance for a EUR/JPY trade, USDRefer
! enceSymbol = “EUR/USD”.
!This is a non-standard FIX field used by FXall Trading Inc. to be
! tter support FX trading.
!
USDReferenceSpotRate     "USDReferenceSpot Rate"     30278 NULL         PRICE              17  REAL               5
!
! For trades performed in cross currency pairs, i.e. non-USD denominated currencies such as EUR/JPY
!  and GBP/CHF, this field contains the current rate in the appropriate USD-based currency pair 
! for the individual leg.
!For instance for a EUR/JPY trade this would contain the current EUR/U
! SD spot rate.
!
!This is a non-standard FIX field used by FXall Trading Inc. to better support
!  FX trading.
!
USDEquivalentQty          "USDEquivalentQty"          30279 NULL         INTEGER            15  UINT              15
!
! For trades performed in cross currency pairs, i.e. non-USD denominated currencies such as EUR/JPY
!  and GBP/CHF, this field contains the USD equivalent amount of the trade for the individual le
! g.
!This is a non-standard FIX field used by FXall Trading Inc. to better support FX trading.
!
TRSEFAllocUSI             "TRSEFAllocUSI"             30280 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Unique SWAP Identifier [USI] for an underlying account issued by the TRSEF
!
!The value is define
! d as a string of [USI Prefix + USI Value]:
!
!
!	
!	[TRSEF NAMESPACE] + [TRSEF Unique-Transact
! ion-Identifier]
!	
!	
!	For TRSEF NAMESPACE value refer to the Parties Repeating Group block
!
! 	
!	
!	The value of TRSEF Unique-Transaction-Identifier is derived from the IndividualAllocID 
! (Tag 467)
!	
!
!
!For NON-SEF trades this field represents UTI [European equivalent of USI] fo
! r the underlying account issued by Thomson Reuters Trading Platform
!
!The value is defined as
!  a string of [TR NON-SEF USI Prefix + USI Value]:
!
!
!	
!	[TR NON-SEF NAMESPACE] + [TRSEF Uni
! que-Transaction-Identifier]
!	
!	
!	For TR NON-SEF NAMESPACE value refer to the Parties Repeat
! ing Group block /this value is not officially defined yet/
!	
!	
!	The value of TRSEF Unique-T
! ransaction-Identifier is derived from the IndividualAllocID (Tag 467)
!	
!
!
!This filed is no
! t applicable for FXSPOT trades
!
!The use of this field does not conform to standard FIX. This
!  field is used to better support FX trading.
!
TRSEFLegUSI               "TRSEFLegUSI"               30282 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Unique SWAP Identifier [USI] for an underlying account within individual leg issued
!
!by the TRS
! EF
!
!
!	
!	The value is defined as a string of [USI Prefix + USI Value]:
!
!	
!		
!		[TRSEF N
! AMESPACE] + [TRSEF Unique-Transaction-Identifier]
!		
!		
!		For TRSEF NAMESPACE value refer t
! o the Parties Repeating Group block
!		
!		
!		The value of TRSEF Unique-Transaction-Identifie
! r is derived from the LegRefID (Tag 654)
!		
!	
!	
!
!
!For NON-SEF trades this field represen
! ts UTI [European equivalent of USI] for the underlying account issued by Thomson Reuters Tradi
! ng Platform
!
!
!	
!	The value is defined as a string of [TR NON-SEF USI Prefix + USI Value]:

! !
!	
!		
!		[TR NON-SEF NAMESPACE] + [TRSEF Unique-Transaction-Identifier]
!		
!		
!		For TR N
! ON-SEF NAMESPACE value refer to the Parties Repeating Group block /this value is not officiall
! y defined yet/
!		
!		
!		The value of TRSEF Unique-Transaction-Identifier is derived from the
!  IndividualAllocID (Tag 467)
!		
!		
!		This filed is not applicable for FXSPOT trades
!		
!	

! !	
!
!
!The use of this field does not conform to standard FIX. This field is used to better 

! !
!support FX trading.
!
TRSEFAllocUSI             "TRSEFAllocUSI"             30284 NULL         ALPHANUMERIC       18  ASCII_STRING        18
!
! Unique SWAP Identifier [USI] for an underlying account within individual leg issued by the TRSEF

! !
!
!	The value is defined as a string of [USI Prefix + USI Value]:
!	
!		[TRSEF NAMESPACE] + 
! [TRSEF Unique-Transaction-Identifier]
!		For TRSEF NAMESPACE value refer to the Parties Repeat
! ing Group block
!		The value of TRSEF Unique-Transaction-Identifier is derived from the LegInd
! ividualAllocID (Tag 672)
!	
!	
!
!
!For NON-SEF trades this field represents UTI [European equ
! ivalent of USI] for the underlying account issued by Thomson Reuters Trading Platform
!
!
!	Th
! e value is defined as a string of [TR NON-SEF USI Prefix + USI Value]:
!	
!		[TR NON-SEF NAMES
! PACE] + [TRSEF Unique-Transaction-Identifier]
!		For TR NON-SEF NAMESPACE value refer to the P
! arties Repeating Group block /this value is not officially defined yet/
!		The value of TRSEF 
! Unique-Transaction-Identifier is derived from the IndividualAllocID (Tag 672)
!	
!	
!	This fie
! ld is not applicable for FXSPOT trades
!
!
!The use of this field does not conform to standard
!  FIX. This field is used to better  support FX trading.
!
AllocSide                 "AllocSide"                 30299 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! Direction of the trade in the underlying account. This is a non-standard FIX field used by Thomso
! n Reuters to better support FX trading.
!
Granularity               "Granularity"               30300 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! 
!
SWAPMatchType             "SWAPMatchType"             30372 NULL         ENUMERATED    1 ( 1 )  ENUM                 1
!
! * For Soft Messages format refer to the ‘PFS for MAPI FIX Forward Swaps&nbsp; v1.5.doc’: Sect
! ions 5.1, 5.2, and 5.3
!This is a non-standard FIX field used by Thomson Reuters to better sup
! port FX trading
